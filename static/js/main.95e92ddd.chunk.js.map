{"version":3,"sources":["evolution/worker/dcgp.worker.js","styles/colors.js","styles/Theme.js","styles/breakpoints.js","styles/GlobalStyle.js","components/AppBar/AppBar.js","components/CircleButton/CircleButton.js","evolution/actions.js","evolution/reducers.js","settings/actions.js","settings/reducers.js","dataset/pointsPresets/linear.js","dataset/actions.js","dataset/pointsPresets/sinc.js","dataset/pointsPresets/sinExp.js","dataset/pointsPresets/noisyParabola.js","dataset/reducers.js","reducers.js","evolution/selectors.js","settings/selectors.js","dataset/selectors.js","evolution/middleware.js","settings/middleware.js","dataset/middleware.js","middleware.js","hooks.js","store.js","icons/Base/Base.js","icons/GitHub/GitHub.js","icons/Menu/Menu.js","components/Navigation/Navigation.js","components/Footer/Footer.js","components/Page/Page.js","components/Divider/Divider.js","icons/Radio/Radio.js","utils/string.js","dataset/components/Dataset/Dataset.js","components/GridContainer/GridContainer.js","components/SubHeader/SubHeader.js","settings/components/Container/Container.js","settings/components/List/List.js","settings/components/Algorithm/style.js","settings/components/Algorithm/Algorithm.js","icons/AddCircle/AddCircle.js","icons/SubtractCircle/SubtractCircle.js","components/QuantityCounter/style.js","components/QuantityCounter/QuantityCounter.js","settings/components/Network/Network.js","icons/CheckBox/CheckBox.js","settings/components/Kernels/style.js","settings/components/Kernels/Kernels.js","icons/Play/Play.js","icons/Pause/Pause.js","evolution/components/PlayPauseButton/PlayPauseButton.js","icons/Reset/Reset.js","icons/Next/Next.js","evolution/components/Controls/Controls.js","evolution/components/Information/Information.js","evolution/components/Evolution/Evolution.js","visualisation/components/Plot/style.js","visualisation/components/Plot/Plot.js","components/Body/Body.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_require__","p","bright","red","yellow","blue","azure","green","orange","grays","NIGHT","Object","objectSpread","dark","background","border","content","fade","divider","dividerOpacity","heading","headingSubtle","primary","secundary","surface","regular","selected","text","bold","subtle","title","theme","breakpoints","xs","sm","md","lg","xl","Theme","_ref","children","react_default","a","createElement","styled_components_browser_esm","createGlobalStyle","_templateObject","styledNormalize","_ref2","AppBar","styled","header","withConfig","displayName","componentId","propTypes","PropTypes","any","CircleButton","button","variant","css","_ref3","size","_ref4","_ref5","padding","_ref6","_ref7","onClick","func","string","isRequired","element","number","oneOf","defaultProps","prefix","SET_DCGP_INSTANCE","sendWorkerMessage","action","type","payload","START_EVOLUTION","PAUSE_EVOLUTION","RESET_EVOLUTION","DONE_EVOLUTION","INITIAL_EVOLUTION","EVOLUTION_PROGRESS","setInitialEvolution","resultObj","pauseEvolution","resetEvolution","combineReducers","instance","state","arguments","length","undefined","actions","isEvolving","isDone","initial","steps","concat","toConsumableArray","SET_SEED","TOGGLE_KERNEL","kernelNamesById","sum","diff","mul","pdiv","sin","cos","log","exp","SET_ROWS","SET_COLUMNS","SET_ARITY","SET_LEVELS_BACK","networkSettingsById","rows","label","min","max","columns","arity","levelsBack","SET_ALGORITHM","algorithmsById","onePlusLambda","settings","offsprings","maxGenerations","initialKernelState","initialNetworkState","initialAlgorithmState","id","seed","kernels","defineProperty","network","algorithm","SET_POINTS","CHANGE_DATASET","pointsPresetsById","linear","sinc","sinExp","noisyParabola","ADD_INPUT","ADD_OUTPUT","REMOVE_INPUT","REMOVE_OUTPUT","SET_INPUTS","SET_OUTPUTS","xBounds","inputPoints","index","push","pointsPresets_linear","equation","inputs","outputs","points","map","x","y","1","pointsPresets_sinc","calc","Math","isNaN","pointsPresets_sinExp","pointsPresets_noisyParabola","pow","random","client","filter","item","byId","linearPreset","sincPreset","sinExpPreset","noisyParabolaPreset","evolution","datasets","dcgpSelector","stepsSelector","currentStepSelector","createSelector","step","lossSelector","loss","chromosomeSelector","chromosome","evolutionStateSelector","settingsSelector","kernelsSelector","activeKernelsSelector","keys","reduce","pre","cur","datasetIdSelector","selectedDatasetSelector","equationSelector","dataset","inputKeysSelector","outputKeysSelector","pointsSelector","inputsSelector","point","input","labelsSelector","output","middleware","dispatch","worker","onmessage","message","data","next","postMessage","store","initializer","then","dcgp","round","setSeed","getState","activeKernelIds","parameters","labeles","_parameters$network","algorithmId","myKernelSet","KernelSet","myExpression","Expression","algorithms","destroy","currentStep","labels","settings_middleware","Error","_action$payload","settingId","value","dataset_middleware","src_middleware","preloadedState","createStore","reducers","compose","applyMiddleware","apply","middlewares","useRedux","mapStateToProps","propsSelector","useMemo","selectors","values","_len","args","Array","_key","prev","i","getPropsSelector","_useState","useState","_useState2","slicedToArray","props","setProps","prevProps","useRef","useEffect","subscribe","newProps","current","assign","Base","svg","attrs","width","height","xmlns","viewBox","checked","GitHub","Base_Base","d","Menu","fill","Title","h1","Padding","div","up","Width","Navigation","handleMenuToggle","isWideEnough","query","queryList","window","matchMedia","_useState3","matches","_useState4","setMatches","handleMatchesChange","event","addListener","removeListener","useMediaQuery","AppBar_AppBar","_StyledCircleButton","icons_Menu_Menu","_StyledTitle","CircleButton_CircleButton","as","href","icons_GitHub_GitHub","Text","className","restProps","objectWithoutProperties","Date","getFullYear","_StyledSpan","Page","main","propType","childern","node","Divider","hr","Radio","Fragment","capitalize","str","charAt","toUpperCase","slice","presetIds","Heading","h2","List","ul","Item","li","Label","span","datasetId","Dataset","_useRedux","handleClick","useCallback","_StyledDiv","key","icons_Radio_Radio","GridContainer","SubHeader","SettingsContainer","GridContainer_GridContainer","SubHeader_SubHeader","_StyledDivider","Row","unStyledRow","IconBase","algorithmIds","Algorithm","handleChange","Container","List_List","style_Row","Algorithm_StyledSpan","AddCircle","SubtractCircle","Wrapper","Input","Button","QuantityCounter","onChange","handleInputChange","val","target","valueAsNumber","disabled","icons_SubtractCircle_SubtractCircle","icons_AddCircle_AddCircle","networkSettingIds","Network","newValue","setNetworkSetting","Network_StyledDiv","components_QuantityCounter_QuantityCounter","CheckBox","kernelIds","Kernels","kernelId","toggleKernel","Kernels_style_Row","icons_CheckBox_CheckBox","Play","Pause","PlayPauseButton","isPlaying","handlePause","handlePlay","icons_Pause_Pause","icons_Play_Play","Reset","Next","ControlWrapper","evolutionState","Controls","handleReset","handleStep","icons_Reset_Reset","components_PlayPauseButton_PlayPauseButton","icons_Next_Next","b","Information","Information_List","Information_Row","Information_Heading","toPrecision","StyledLineChart","LineChart","Evolve","getData","components_Controls_Controls","Divider_Divider","components_Information_Information","Evolution_StyledDiv","_StyledDiv2","es6","style","position","margin","top","right","bottom","left","dataKey","domain","dataMax","hide","scale","dataMin","vertical","dot","unStyledGridContainer","Plot","predictions","useContext","ThemeContext","setChromosome","getResult","prediction","style_GridContainer","Plot_StyledDiv","Plot_StyledDiv2","style_StyledLineChart","verticalAlign","name","r","stroke","Plot_StyledDivider","react_katex","Body","GlobalStyle","components_Navigation_Navigation","console","Page_Page","components_Dataset_Dataset","Body_StyledDiv","Evolution","components_Kernels_Kernels","components_Network_Network","components_Algorithm_Algorithm","components_Plot_Plot","components_Footer_Footer","App","styles_Theme","components_Body_Body","Boolean","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95e92ddd.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"88504bfe42033ea9e218.worker.js\");\n};","import { transparentize as fade } from 'polished'\n\nexport const bright = {\n  red: '#D0103A',\n  yellow: '#FDC82F',\n  blue: '#00338D',\n  azure: '#0098DB',\n  green: '#008542',\n  orange: '#E37222',\n}\n\nexport const dark = {\n  red: '#822433',\n  yellow: '#B88B00',\n  blue: '#002664',\n  azure: '#00549F',\n  green: '#284E36',\n  orange: '#9D5116',\n}\n\nexport const grays = {\n  '000': '#FFFFFF',\n  '100': '#F5F5F5',\n  '200': '#D5D6D2',\n  '250': '#9A9B9C',\n  '300': '#747678',\n  '400': '#666666',\n  '500': '#4D4F53',\n  '600': '#363636',\n  '700': '#222222',\n  '800': '#171717',\n  '900': '#000000',\n}\n\nexport const DAY = {\n  ...bright,\n  dark,\n  background: grays['000'],\n  border: {\n    content: fade(0.9, grays['900']),\n    divider: grays['200'],\n    dividerOpacity: fade(0.85, grays['900']),\n  },\n  heading: grays['800'],\n  headingSubtle: grays['600'],\n  primary: bright.red,\n  secundary: bright.yellow,\n  surface: {\n    regular: grays['100'],\n    selected: grays['200'],\n  },\n  text: {\n    regular: grays['700'],\n    bold: grays['900'],\n    subtle: grays['400'],\n  },\n  title: grays['900'],\n}\n\nexport const NIGHT = {\n  ...bright,\n  background: grays['800'],\n  border: {\n    content: fade(0.9, grays['000']),\n    divider: grays['500'],\n    dividerOpacity: fade(0.85, grays['000']),\n  },\n  heading: grays['100'],\n  headingSubtle: grays['600'],\n  primary: bright.red,\n  secundary: bright.yellow,\n  surface: {\n    regular: grays['700'],\n    selected: grays['500'],\n  },\n  text: {\n    regular: grays['200'],\n    bold: grays['000'],\n    subtle: grays['300'],\n  },\n  title: grays['000'],\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeProvider } from 'styled-components'\nimport { NIGHT } from './colors'\nimport breakpoints from './breakpoints'\n\nconst theme = {\n  ...NIGHT,\n  breakpoints,\n}\n\nconst Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n)\n\nTheme.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Theme\n","export default {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n}\n","import { createGlobalStyle } from 'styled-components'\nimport styledNormalize from 'styled-normalize'\n\nexport default createGlobalStyle`\n  ${styledNormalize};\n\n  -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);\n\n  body {\n    background-color: ${({ theme }) => theme.background};\n    color: ${({ theme }) => theme.title};\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code, pre {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n`\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst AppBar = styled.header`\n  border-bottom: 1px solid ${({ theme }) => theme.border.content};\n  width: 100%;\n  display: flex;\n  z-index: 1100;\n  box-sizing: border-box;\n  flex-shrink: 0;\n  flex-direction: column;\n`\n\nAppBar.propTypes = {\n  children: PropTypes.any,\n}\n\nexport default AppBar\n","import styled, { css } from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { transparentize as fade } from 'polished'\n\nconst CircleButton = styled.button`\n  color: ${({ theme }) => theme.title};\n  border-radius: 50%;\n  background: none;\n\n  ${({ variant, theme }) => {\n    if (variant === 'regular') {\n      return css`\n        background-color: ${fade(0.93, theme.title)};\n      `\n    } else if (variant === 'ghost') {\n      return css`\n        background-color: ${fade(1, theme.title)};\n      `\n    }\n  }};\n\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  padding: ${({ padding }) => padding}px;\n  transition: background-color 150ms ease-out;\n  box-sizing: border-box;\n\n  &:hover {\n    ${({ variant, theme }) => {\n      if (variant === 'regular') {\n        return css`\n          background-color: ${fade(0.9, theme.title)};\n        `\n      } else if (variant === 'ghost') {\n        return css`\n          background-color: ${fade(0.93, theme.title)};\n        `\n      }\n    }};\n  }\n\n  &:active {\n    transition: background-color 80ms ease-out;\n    background-color: ${({ theme }) => fade(0.95, theme.title)};\n  }\n`\n\nCircleButton.propTypes = {\n  onClick: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  size: PropTypes.number,\n  padding: PropTypes.number,\n  variant: PropTypes.oneOf(['regular', 'ghost']),\n}\n\nCircleButton.defaultProps = {\n  size: 34,\n  padding: 5,\n  variant: 'regular',\n}\n\nexport default CircleButton\n","// the namespace for the actions in this file\n// prevents actions from being declared multiple times\nconst prefix = '[evolution] '\n\nexport const SET_DCGP_INSTANCE = prefix + 'SET_DCGP_INSTANCE'\n\nexport const setDcgpInstance = instance => ({\n  type: SET_DCGP_INSTANCE,\n  payload: instance,\n})\n\nexport const WORKER_MESSAGE_IN = prefix + 'WORKER_MESSAGE_IN'\nexport const WORKER_MESSAGE_OUT = prefix + 'WORKER_MESSAGE_OUT'\n\nexport const sendWorkerMessage = action => ({\n  type: WORKER_MESSAGE_OUT,\n  payload: action,\n})\n\nexport const START_EVOLUTION = prefix + 'START_EVOLUTION'\nexport const PAUSE_EVOLUTION = prefix + 'PAUSE_EVOLUTION'\nexport const RESET_EVOLUTION = prefix + 'RESET_EVOLUTION'\nexport const STEP_EVOLUTION = prefix + 'STEP_EVOLUTION'\nexport const DONE_EVOLUTION = prefix + 'DONE_EVOLUTION'\nexport const INITIAL_EVOLUTION = prefix + 'INITIAL_EVOLUTION'\nexport const LOSS_THRESHOLD = 1e-14\nexport const EVOLUTION_PROGRESS = prefix + 'EVOLUTION_PROGRESS'\n\nexport const setInitialEvolution = resultObj => ({\n  type: INITIAL_EVOLUTION,\n  payload: resultObj,\n})\n\nexport const startEvolution = () => ({\n  type: START_EVOLUTION,\n})\n\nexport const pauseEvolution = () => ({\n  type: PAUSE_EVOLUTION,\n})\n\nexport const resetEvolution = () => ({\n  type: RESET_EVOLUTION,\n})\n\nexport const stepEvolution = () => ({\n  type: STEP_EVOLUTION,\n})\n\nexport const doneEvolution = () => ({\n  type: DONE_EVOLUTION,\n})\n\nexport const evolutionProgress = resultObj => ({\n  type: EVOLUTION_PROGRESS,\n  payload: resultObj,\n})\n","/* state structure\n{\n  instance: {\n    KernelSet: KernelSet,\n    Kernel: Kernel,\n    Expression: Expression,\n  },\n  isEvolving: Bool,\n  isDone: Bool,\n  initial: {\n    loss: Number,\n    chromosome: [Number],\n  },\n  steps: [{\n    loss: Number,\n    chromosome: [Number],\n    step: Number,\n  }],\n}\n*/\n\nimport { combineReducers } from 'redux'\nimport * as actions from './actions'\n\nfunction instance(state = {}, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_DCGP_INSTANCE:\n      return { ...state, ...payload }\n    default:\n      return state\n  }\n}\n\nfunction isEvolving(state = false, action) {\n  const { type } = action\n\n  switch (type) {\n    case actions.START_EVOLUTION:\n      return true\n    case actions.PAUSE_EVOLUTION:\n    case actions.RESET_EVOLUTION:\n    case actions.DONE_EVOLUTION:\n      return false\n    default:\n      return state\n  }\n}\n\nfunction isDone(state = false, action) {\n  const { type } = action\n\n  switch (type) {\n    case actions.DONE_EVOLUTION:\n      return true\n    case actions.RESET_EVOLUTION:\n      return false\n    default:\n      return state\n  }\n}\n\nfunction initial(state = {}, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.INITIAL_EVOLUTION:\n      return payload\n    case actions.RESET_EVOLUTION:\n      return {}\n    default:\n      return state\n  }\n}\n\nfunction steps(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.EVOLUTION_PROGRESS:\n      return [...state, payload]\n    case actions.RESET_EVOLUTION:\n      return []\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  instance,\n  isEvolving,\n  isDone,\n  initial,\n  steps,\n})\n","// the namespace for the actions in this file\n// prevents actions from being declared multiple times\nconst prefix = '[settings] '\n\nexport const SET_SEED = prefix + 'SET_SEED'\nexport const TOGGLE_KERNEL = prefix + 'TOGGLE_KERNEL'\n\nexport const kernelNamesById = {\n  sum: 'addition',\n  diff: 'subtraction',\n  mul: 'multiplication',\n  pdiv: 'divide',\n  sin: 'sine',\n  cos: 'cosine',\n  log: 'logarithm',\n  exp: 'exponential',\n}\n\nexport const setSeed = seed => ({\n  type: SET_SEED,\n  payload: seed,\n})\n\nexport const toggleKernel = kernelId => ({\n  type: TOGGLE_KERNEL,\n  payload: kernelId,\n})\n\nexport const NETWORK_CHANGE = prefix + 'NETWORK_CHANGE'\nexport const SET_ROWS = prefix + 'SET_ROWS'\nexport const SET_COLUMNS = prefix + 'SET_COLUMNS'\nexport const SET_ARITY = prefix + 'SET_ARITY'\nexport const SET_LEVELS_BACK = prefix + 'SET_LEVELS_BACK'\n\nexport const networkSettingsById = {\n  rows: {\n    label: 'rows',\n    min: 1,\n    max: 10,\n  },\n  columns: {\n    label: 'columns',\n    min: 1,\n    max: 100,\n  },\n  arity: {\n    label: 'arity',\n    min: 2,\n    max: 5,\n  },\n  levelsBack: {\n    label: 'levels back',\n    min: 1,\n    max: 101,\n  },\n}\n\nexport const setRows = rows => ({\n  type: SET_ROWS,\n  payload: rows,\n})\n\nexport const setColumns = columns => ({\n  type: SET_COLUMNS,\n  payload: columns,\n})\n\nexport const setArity = arity => ({\n  type: SET_ARITY,\n  payload: arity,\n})\n\nexport const setLevelsBack = levelsBack => ({\n  type: SET_LEVELS_BACK,\n  payload: levelsBack,\n})\n\nexport const setNetworkSetting = (settingId, value) => ({\n  type: NETWORK_CHANGE,\n  payload: {\n    settingId,\n    value,\n  },\n})\n\nexport const SET_ALGORITHM = prefix + 'SET_ALGORITHM'\n\n// name of the function exported by dcgp.js\nexport const algorithmsById = {\n  onePlusLambda: {\n    label: 'one plus lambda',\n    settings: {\n      offsprings: 4,\n      maxGenerations: 1000,\n    },\n  },\n}\n\nexport const setAlgorithm = algorithmId => ({\n  type: SET_ALGORITHM,\n  payload: algorithmId,\n})\n","/* state structure\n{\n  seed: Number\n  kernels: {\n    sum: Bool,\n    diff: Bool,\n    mul: Bool,\n    div: Bool,\n    pdiv: Bool,\n    sin: Bool,\n    cos: Bool,\n    log: Bool,\n    exp: Bool,\n  },\n  network: {\n    rows: Number,\n    columns: Number,\n    arity: Number,\n    levelsBack: Number\n  }\n  algorithm: {\n    id: String\n    offsprings: Number,\n    maxGenerations: Number,\n  }\n}\n*/\n\nimport { combineReducers } from 'redux'\nimport * as actions from './actions'\n\nfunction seed(state = 12, action) {\n  switch (action.type) {\n    case actions.SET_SEED:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst initialKernelState = {\n  sum: false,\n  diff: true,\n  mul: true,\n  pdiv: true,\n  sin: true,\n  cos: true,\n  log: false,\n  exp: false,\n}\n\nfunction kernels(state = initialKernelState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.TOGGLE_KERNEL:\n      return { ...state, [payload]: !state[payload] }\n    default:\n      return state\n  }\n}\n\nconst initialNetworkState = {\n  rows: 1, // min 1\n  columns: 25, // min 1\n  arity: 2, // min 2\n  levelsBack: 5, // min 1\n}\n\nfunction network(state = initialNetworkState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_ROWS:\n      return { ...state, rows: payload }\n    case actions.SET_COLUMNS:\n      return { ...state, columns: payload }\n    case actions.SET_ARITY:\n      return { ...state, arity: payload }\n    case actions.SET_LEVELS_BACK:\n      return { ...state, levelsBack: payload }\n    default:\n      return state\n  }\n}\n\nconst initialAlgorithmState = {\n  id: 'onePlusLambda',\n  offsprings: 4,\n  maxGenerations: 1000,\n}\n\nfunction algorithm(state = initialAlgorithmState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_ALGORITHM:\n      return { ...state, id: payload }\n    default:\n      return state\n  }\n}\n\nconst settings = combineReducers({\n  seed,\n  kernels,\n  network,\n  algorithm,\n})\n\nexport default settings\n","const xBounds = {\n  start: -10,\n  end: 10,\n  step: 1,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => ({\n  y: 2 * x + 2,\n  '1': 1,\n  x,\n}))\n\nexport default {\n  equation: 'y = 2x+2',\n  inputs: ['x', '1'],\n  outputs: ['y'],\n  points,\n}\n","// the namespace for the actions in this file\n// prevents actions from being declared multiple times\nconst prefix = '[dataset] '\n\nexport const SET_POINTS = prefix + 'SET_POINTS'\nexport const CHANGE_DATASET = prefix + 'CHANGE_DATASET'\nexport const SET_POINTS_PRESET = prefix + 'SET_POINTS_PRESET'\n\nexport const pointsPresetsById = {\n  linear: {\n    label: 'linear',\n  },\n  sinc: {\n    label: 'cardinal sine',\n  },\n  sinExp: {\n    label: 'sine of exponent',\n  },\n  noisyParabola: {\n    label: 'noisy parabola',\n  },\n}\n\nexport const setPoints = points => ({\n  type: SET_POINTS,\n  payload: points,\n})\n\nexport const changeDataset = datasetId => ({\n  type: CHANGE_DATASET,\n  payload: datasetId,\n})\n\nexport const ADD_INPUT = prefix + 'ADD_INPUT'\nexport const ADD_OUTPUT = prefix + 'ADD_OUTPUT'\nexport const REMOVE_INPUT = prefix + 'REMOVE_INPUT'\nexport const REMOVE_OUTPUT = prefix + 'REMOVE_OUTPUT'\nexport const SET_INPUTS = prefix + 'SET_INPUTS'\nexport const SET_OUTPUTS = prefix + 'SET_OUTPUTS'\n","const xBounds = {\n  start: -10,\n  end: 10,\n  step: 1,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => {\n  const calc = Math.sin(x) / x\n\n  return {\n    y: isNaN(calc) ? 1 : calc,\n    x,\n  }\n})\n\nexport default {\n  equation: 'y = \\\\sin(x) \\\\div x',\n  inputs: ['x'],\n  outputs: ['y'],\n  points,\n}\n","const xBounds = {\n  start: 0,\n  end: 4,\n  step: 0.15,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => {\n  const calc = Math.sin(Math.exp(x))\n\n  return {\n    y: isNaN(calc) ? 0 : calc,\n    x,\n  }\n})\n\nexport default {\n  equation: 'y = \\\\sin(\\\\exp(x))',\n  inputs: ['x'],\n  outputs: ['y'],\n  points,\n}\n","const xBounds = {\n  start: -4,\n  end: 4,\n  step: 0.3,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => {\n  // 0.5(x - 2) ^ 2 + 2(x - 2)\n  const calc = 0.5 * Math.pow(x - 2, 2) + 2 * (x - 2) + Math.random()\n\n  return {\n    y: isNaN(calc) ? 1 : calc,\n    x,\n    '1': 1,\n  }\n})\n\nexport default {\n  equation: 'y = 0.5(x - 2)^2 + 2(x - 2) + noise',\n  inputs: ['x', '1'],\n  outputs: ['y'],\n  points,\n}\n","/*\n{\n  datasetId: String,\n  datasets: {\n    [String]: {\n      inputs: [String],\n      outputs: [String],\n      equation: ?String,\n      points: [{\n        [String]: Number,\n      }],\n    },\n  },\n}\n*/\n\nimport { combineReducers } from 'redux'\nimport * as actions from './actions'\nimport linearPreset from './pointsPresets/linear'\nimport sincPreset from './pointsPresets/sinc'\nimport sinExpPreset from './pointsPresets/sinExp'\nimport noisyParabolaPreset from './pointsPresets/noisyParabola'\n\nfunction id(state = 'sinc', action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.CHANGE_DATASET:\n      return payload\n    default:\n      return state\n  }\n}\n\nconst linear = (state = linearPreset) => state\nconst sinc = (state = sincPreset) => state\nconst sinExp = (state = sinExpPreset) => state\nconst noisyParabola = (state = noisyParabolaPreset) => state\n\nfunction inputs(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.ADD_INPUT:\n      return [...state, payload]\n    case actions.SET_INPUTS:\n      return payload\n    case actions.REMOVE_INPUT:\n      return state.filter(item => item !== payload)\n    default:\n      return state\n  }\n}\n\nfunction outputs(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.ADD_OUTPUT:\n      return [...state, payload]\n    case actions.SET_OUTPUTS:\n      return payload\n    case actions.REMOVE_OUTPUT:\n      return state.filter(item => item !== payload)\n    default:\n      return state\n  }\n}\n\nfunction points(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_POINTS:\n      return payload\n    default:\n      return state\n  }\n}\n\nconst client = combineReducers({\n  outputs,\n  inputs,\n  points,\n})\n\nconst byId = combineReducers({\n  linear,\n  sinc,\n  sinExp,\n  noisyParabola,\n  client,\n})\n\nexport default combineReducers({\n  id,\n  byId,\n})\n","import { combineReducers } from 'redux'\nimport evolution from './evolution/reducers'\nimport settings from './settings/reducers'\nimport datasets from './dataset/reducers'\n\nexport default combineReducers({\n  evolution,\n  settings,\n  datasets,\n})\n","import { createSelector } from 'reselect'\n\nexport const dcgpSelector = state => state.evolution.instance\n\nexport const stepsSelector = state => state.evolution.steps\n\nexport const isDoneSelector = state => state.evolution.isDone\n\nexport const currentStepSelector = createSelector(\n  stepsSelector,\n  steps => {\n    if (!steps.length) {\n      return 0\n    }\n\n    return steps[steps.length - 1].step\n  }\n)\n\nexport const lossSelector = createSelector(\n  stepsSelector,\n  state => state.evolution.initial,\n  (steps, initial) => {\n    if (!steps.length) {\n      if (initial) {\n        return initial.loss\n      }\n\n      return null\n    }\n\n    return steps[steps.length - 1].loss\n  }\n)\n\nexport const chromosomeSelector = createSelector(\n  state => state.evolution.steps,\n  state => state.evolution.initial,\n  (steps, initial) => {\n    if (!steps.length) {\n      if (initial) {\n        return initial.chromosome\n      }\n\n      return null\n    }\n\n    return steps[steps.length - 1].chromosome\n  }\n)\n\nexport const evolutionStateSelector = createSelector(\n  state => state.evolution,\n  evolution => {\n    if (evolution.isEvolving) {\n      return 'EVOLVING'\n    }\n\n    if (evolution.steps.length) {\n      return 'PAUSING'\n    }\n\n    return 'EMPTY'\n  }\n)\n","import { createSelector } from 'reselect'\n\nexport const settingsSelector = state => state.settings\n\nexport const networkSelector = state => state.settings.network\n\nexport const kernelsSelector = state => state.settings.kernels\n\nexport const algorithmSelector = state => state.settings.algorithm\n\nexport const activeKernelsSelector = createSelector(\n  kernelsSelector,\n  kernels =>\n    Object.keys(kernels).reduce((pre, cur) => {\n      if (kernels[cur]) {\n        pre.push(cur)\n      }\n\n      return pre\n    }, [])\n)\n","import { createSelector } from 'reselect'\n\nexport const datasetIdSelector = state => state.datasets.id\n\nexport const selectedDatasetSelector = createSelector(\n  datasetIdSelector,\n  state => state.datasets.byId,\n  (id, datasets) => datasets[id]\n)\n\nexport const equationSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.equation\n)\n\nexport const inputKeysSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.inputs\n)\n\nexport const outputKeysSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.outputs\n)\n\nexport const pointsSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.points\n)\n\nexport const inputsSelector = createSelector(\n  inputKeysSelector,\n  pointsSelector,\n  (inputs, points) => points.map(point => inputs.map(input => point[input]))\n)\n\nexport const labelsSelector = createSelector(\n  outputKeysSelector,\n  pointsSelector,\n  (outputs, points) => points.map(point => outputs.map(output => point[output]))\n)\n","import initializer from 'dcgp'\nimport {\n  SET_DCGP_INSTANCE,\n  START_EVOLUTION,\n  PAUSE_EVOLUTION,\n  LOSS_THRESHOLD,\n  INITIAL_EVOLUTION,\n  setInitialEvolution,\n  WORKER_MESSAGE_OUT,\n  sendWorkerMessage,\n  RESET_EVOLUTION,\n  STEP_EVOLUTION,\n  pauseEvolution,\n} from './actions'\nimport { setSeed } from '../settings/actions'\nimport {\n  currentStepSelector,\n  dcgpSelector,\n  lossSelector,\n  chromosomeSelector,\n} from './selectors'\nimport { activeKernelsSelector, settingsSelector } from '../settings/selectors'\nimport { inputsSelector, labelsSelector } from '../dataset/selectors'\n// eslint-disable-next-line import/default\nimport Worker from './worker/dcgp.worker'\n\nexport const setWorker = ({ dispatch }) => {\n  const worker = new Worker()\n\n  worker.onmessage = message => {\n    dispatch(message.data)\n  }\n\n  return next => action => {\n    if (action.type === WORKER_MESSAGE_OUT) {\n      worker.postMessage(action.payload)\n    }\n\n    next(action)\n  }\n}\n\nexport const handleWorkerMessages = store => next => action => {\n  if (action.type === SET_DCGP_INSTANCE) {\n    initializer(action.payload.module).then(dcgp => {\n      next({\n        ...action,\n        payload: { ...action.payload, ...dcgp },\n      })\n\n      store.dispatch(setInitialEvolution())\n    })\n\n    return\n  }\n\n  next(action)\n}\n\nexport const handleEvolution = store => next => action => {\n  if (action.type === PAUSE_EVOLUTION) {\n    store.dispatch(sendWorkerMessage(action))\n  }\n\n  if (action.type === RESET_EVOLUTION) {\n    store.dispatch(sendWorkerMessage(action))\n\n    next(action)\n\n    const seed = Math.round(Math.random() * 1000)\n    store.dispatch(setSeed(seed))\n\n    store.dispatch(setInitialEvolution())\n    return\n  }\n\n  if (action.type === STEP_EVOLUTION) {\n    store.dispatch(pauseEvolution())\n  }\n\n  if (action.type === START_EVOLUTION || action.type === STEP_EVOLUTION) {\n    const state = store.getState()\n\n    const loss = lossSelector(state)\n\n    if (loss !== null && loss <= LOSS_THRESHOLD) {\n      return\n    }\n\n    next(action)\n\n    const activeKernelIds = activeKernelsSelector(state)\n    const parameters = settingsSelector(state)\n    const currentStep = currentStepSelector(state)\n    const chromosome = chromosomeSelector(state)\n    const inputs = inputsSelector(state)\n    const labels = labelsSelector(state)\n\n    store.dispatch(\n      sendWorkerMessage({\n        ...action,\n        payload: {\n          ...action.payload,\n          activeKernelIds,\n          parameters,\n          step: currentStep,\n          inputs,\n          labels,\n          chromosome,\n        },\n      })\n    )\n    return\n  }\n\n  if (action.type === INITIAL_EVOLUTION) {\n    const state = store.getState()\n\n    const dcgp = dcgpSelector(state)\n    const activeKernelIds = activeKernelsSelector(state)\n    const parameters = settingsSelector(state)\n    const inputs = inputsSelector(state)\n    const labeles = labelsSelector(state)\n\n    const {\n      seed,\n      network: { rows, columns, arity, levelsBack },\n      algorithm: { id: algorithmId },\n    } = parameters\n\n    // this should move to dcgp.worker.js\n    const myKernelSet = new dcgp.KernelSet(activeKernelIds)\n    const myExpression = new dcgp.Expression(\n      inputs[0].length,\n      labeles[0].length,\n      rows,\n      columns,\n      levelsBack,\n      arity,\n      myKernelSet,\n      seed\n    )\n\n    const resultObj = dcgp.algorithms[algorithmId](\n      myExpression,\n      1,\n      0,\n      inputs,\n      labeles\n    )\n\n    myKernelSet.destroy()\n    myExpression.destroy()\n\n    next({ ...action, payload: { ...action.payload, ...resultObj } })\n    return\n  }\n\n  next(action)\n}\n\nexport default [setWorker, handleWorkerMessages, handleEvolution]\n","import {\n  TOGGLE_KERNEL,\n  NETWORK_CHANGE,\n  setRows,\n  setColumns,\n  setArity,\n  setLevelsBack,\n} from './actions'\nimport { resetEvolution } from '../evolution/actions'\n\nexport const handleKernelChange = store => next => action => {\n  if (action.type === TOGGLE_KERNEL) {\n    const state = store.getState()\n    const { payload } = action\n\n    if (!(payload in state.settings.kernels)) {\n      throw new Error(`The specified kernelId \"${payload}\" does not exist.`)\n    }\n\n    next(action)\n\n    store.dispatch(resetEvolution())\n    return\n  }\n\n  next(action)\n}\n\nexport const handleNetworkChange = store => next => action => {\n  next(action)\n\n  if (action.type === NETWORK_CHANGE) {\n    const { dispatch } = store\n    const {\n      payload: { settingId, value },\n    } = action\n\n    switch (settingId) {\n      case 'rows':\n        dispatch(setRows(value))\n        break\n      case 'columns':\n        dispatch(setColumns(value))\n        break\n      case 'arity':\n        dispatch(setArity(value))\n        break\n      case 'levelsBack':\n        dispatch(setLevelsBack(value))\n        break\n      default:\n        throw new Error(`settingId ${settingId} is not allowed`)\n    }\n\n    dispatch(resetEvolution())\n  }\n}\n\nexport default [handleKernelChange, handleNetworkChange]\n","import { CHANGE_DATASET } from './actions'\nimport { resetEvolution } from '../evolution/actions'\n\nexport const handleDatasetChange = store => next => action => {\n  next(action)\n\n  if (action.type === CHANGE_DATASET) {\n    store.dispatch(resetEvolution())\n  }\n}\n\nexport default [handleDatasetChange]\n","// For example on Redux middleware see:\n// https://github.com/demo-projects/redux-patterns-demo/tree/finish/src/redux/middleware\n// and the corresponding talk by Nir Kaufman: https://www.youtube.com/watch?v=JUuic7mEs-s\nimport evolution from './evolution/middleware'\nimport settings from './settings/middleware'\nimport dataset from './dataset/middleware'\n\nexport default [...evolution, ...settings, ...dataset]\n","import { useState, useEffect, useMemo, useRef } from 'react'\nimport { createSelector } from 'reselect'\nimport configureStore from './store'\n\nconst store = configureStore(/* provide initial state if any */)\n\nconst getPropsSelector = mapStateToProps => {\n  const selectors = Object.values(mapStateToProps)\n  const keys = Object.keys(mapStateToProps)\n\n  const propsSelector = createSelector(\n    ...selectors,\n    (...args) =>\n      args.reduce((prev, cur, i) => ({ ...prev, [keys[i]]: cur }), {})\n  )\n\n  return propsSelector\n}\n\nexport const useRedux = mapStateToProps => {\n  const propsSelector = useMemo(() => getPropsSelector(mapStateToProps), [\n    mapStateToProps,\n  ])\n  const [props, setProps] = useState(() => propsSelector(store.getState()))\n  const prevProps = useRef(props)\n\n  useEffect(() => {\n    const handleChange = () => {\n      const state = store.getState()\n      const newProps = propsSelector(state)\n\n      if (prevProps.current !== newProps) {\n        prevProps.current = newProps\n        setProps(newProps)\n      }\n    }\n\n    const unsubsribe = store.subscribe(handleChange)\n    return unsubsribe\n  }, [propsSelector])\n\n  return Object.assign(props, { dispatch: store.dispatch })\n}\n\nexport const useMediaQuery = query => {\n  const queryList = useMemo(() => window.matchMedia(query), [query])\n\n  const [matches, setMatches] = useState(queryList.matches)\n\n  useEffect(() => {\n    const handleMatchesChange = event => {\n      setMatches(event.matches)\n    }\n\n    queryList.addListener(handleMatchesChange)\n    return () => {\n      queryList.removeListener(handleMatchesChange)\n    }\n  }, [query])\n\n  return matches\n}\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport reducers from './reducers'\nimport middlewares from './middleware'\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    reducers,\n    preloadedState,\n    compose(applyMiddleware(...middlewares))\n  )\n\n  return store\n}\n","import styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Base = styled.svg.attrs(({ size }) => ({\n  width: size,\n  height: size,\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 24 24',\n}))`\n  fill: currentColor;\n  color: ${({ checked, theme }) => (checked ? theme.primary : 'inherit')};\n  user-select: none;\n`\n\nBase.propTypes = {\n  size: PropTypes.number,\n}\n\nBase.defaultProps = {\n  size: 24,\n}\n\nexport default Base\n","import React from 'react'\nimport Base from '../Base'\n\nconst GitHub = props => (\n  <Base {...props}>\n    <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n  </Base>\n)\n\nexport default GitHub\n","import React from 'react'\nimport Base from '../Base'\n\nconst Menu = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </Base>\n)\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport AppBar from '../AppBar'\nimport CircleButton from '../CircleButton'\n// import Toolbar from '../Toolbar'\nimport { useMediaQuery } from '../../hooks'\nimport GitHub from '../../icons/GitHub'\nimport Menu from '../../icons/Menu'\nimport { up } from 'styled-breakpoints'\n\nconst Title = styled.h1`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n`\n\nconst Padding = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 64px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0px 20px;\n\n  ${up('sm')} {\n    padding: 0 50px;\n  }\n\n  ${up('md')} {\n    padding: 0 130px;\n  }\n`\n\nconst Width = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 1180px;\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Navigation = ({ handleMenuToggle }) => {\n  const isWideEnough = useMediaQuery('(min-width: 960px)')\n\n  return (\n    <AppBar>\n      <Padding>\n        <Width>\n          <CircleButton\n            onClick={handleMenuToggle}\n            title=\"Menu\"\n            size={48}\n            padding={12}\n            variant=\"ghost\"\n            css=\"margin-left: -12px;\"\n          >\n            <Menu size={null} />\n          </CircleButton>\n          <Title css=\"flex-grow: 1; margin-left: 30px;\">\n            {isWideEnough\n              ? 'differentiable cartesian genetic programming'\n              : 'dcgp'}\n          </Title>\n          <CircleButton\n            as=\"a\"\n            title=\"GitHub\"\n            size={48}\n            padding={12}\n            variant=\"ghost\"\n            href=\"https://github.com/mikeheddes/dcgp.js\"\n          >\n            <GitHub size={null} />\n          </CircleButton>\n        </Width>\n      </Padding>\n    </AppBar>\n  )\n}\n\nNavigation.propTypes = {\n  handleMenuToggle: PropTypes.func.isRequired,\n}\n\nexport default Navigation\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Text = styled.p`\n  color: ${({ theme }) => theme.text.subtle};\n  text-align: center;\n  font-size: 0.75rem;\n  font-weight: 400;\n  line-height: 1.66;\n  margin: 0;\n`\n\nconst Footer = ({ className, children, ...restProps }) => (\n  <footer className={className} {...restProps}>\n    <Text>\n      Copyright © {new Date().getFullYear()} European Space Agency.{' '}\n      <span css=\"display: inline-block;\">All rights reserved.</span>\n    </Text>\n  </footer>\n)\n\nexport default styled(Footer)`\n  background-color: ${({ theme }) => theme.surface.regular};\n  height: 64px;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { up } from 'styled-breakpoints'\n\nconst Page = styled.main`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1180px;\n  padding: 30px 20px;\n  display: grid;\n  grid-template-columns: [full-start] 1fr [full-end];\n  grid-template-rows: auto;\n  grid-gap: 20px;\n\n  ${up('sm')} {\n    grid-template-columns: [full-start] repeat(2, 1fr) [full-end];\n    padding: 50px;\n  }\n\n  ${up('md')} {\n    grid-gap: 30px;\n    padding-left: 130px;\n    padding-right: 130px;\n  }\n\n  ${up('lg')} {\n    grid-template-columns: [full-start] repeat(4, 1fr) [full-end];\n  }\n`\n\nPage.propType = {\n  childern: PropTypes.node.isRequired,\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Divider = styled.hr`\n  display: block;\n  height: auto;\n  margin: 0;\n  border-bottom: 0;\n  border-left: 0;\n  border-width: 2px;\n  border-top-style: solid;\n  border-right-style: solid;\n  border-color: ${({ theme }) => theme.border.divider};\n`\n\nexport default Divider\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Base from '../Base'\n\nconst Radio = props => (\n  <Base {...props}>\n    {props.checked ? (\n      <>\n        <path d=\"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </>\n    ) : (\n      <>\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </>\n    )}\n  </Base>\n)\n\nRadio.propTypes = {\n  checked: PropTypes.bool,\n}\n\nexport default Radio\n","export const capitalize = str => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport Radio from '../../../icons/Radio'\nimport { capitalize } from '../../../utils/string'\nimport { pointsPresetsById, changeDataset } from '../../actions'\nimport { datasetIdSelector } from '../../selectors'\nimport { useRedux } from '../../../hooks'\n\nconst presetIds = Object.keys(pointsPresetsById)\n\nconst Heading = styled.h2`\n  margin: 0;\n  margin-bottom: 20px;\n  font-weight: 600;\n`\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n  margin: 0;\n`\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: 15px;\n  cursor: pointer;\n`\n\nconst Label = styled.span`\n  margin-left: 8px;\n`\n\nconst mapStateToProps = {\n  datasetId: datasetIdSelector,\n}\n\nconst Dataset = () => {\n  const { dispatch, datasetId } = useRedux(mapStateToProps)\n  const handleClick = useCallback(id => () => dispatch(changeDataset(id)), [\n    dispatch,\n  ])\n\n  return (\n    <div css=\"grid-column: full;\">\n      <Heading>Select data</Heading>\n      <List>\n        {presetIds.map(id => (\n          <Item key={id} onClick={handleClick(id)}>\n            <Radio checked={datasetId === id} />\n            <Label>{capitalize(pointsPresetsById[id].label)}</Label>\n          </Item>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nexport default Dataset\n","import styled from 'styled-components'\n\nconst GridContainer = styled.div`\n  background-color: ${({ theme }) => theme.surface.regular};\n  border-radius: 14px;\n  padding: 20px 20px 30px;\n`\n\nexport default GridContainer\n","import styled from 'styled-components'\n\nconst SubHeader = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  margin-bottom: 8px;\n`\n\nexport default SubHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GridContainer from '../../../components/GridContainer'\nimport Divider from '../../../components/Divider'\nimport SubHeader from '../../../components/SubHeader'\n\nconst SettingsContainer = ({ children, title }) => (\n  <GridContainer>\n    <SubHeader>{title}</SubHeader>\n    <Divider css=\"margin-bottom: 15px\" />\n    {children}\n  </GridContainer>\n)\n\nSettingsContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default SettingsContainer\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  margin-top: 15px;\n`\n\nexport const Row = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 8px;\n  color: ${({ theme }) => theme.text.regular};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n","import styled from 'styled-components'\nimport { Row as unStyledRow } from '../List'\nimport IconBase from '../../../icons/Base'\n\nexport const Row = styled(unStyledRow)`\n  cursor: pointer;\n\n  ${IconBase} {\n    margin-right: 8px;\n  }\n`\n\nexport const Icon = styled.span`\n  margin-right: 8px;\n`\n","import React, { useCallback } from 'react'\nimport { useRedux } from '../../../hooks'\nimport { setAlgorithm, algorithmsById } from '../../actions'\nimport { algorithmSelector } from '../../selectors'\nimport Container from '../Container'\nimport Radio from '../../../icons/Radio'\nimport List from '../List'\nimport { Row } from './style'\nimport { capitalize } from '../../../utils/string'\n\nconst algorithmIds = Object.keys(algorithmsById)\n\nconst mapStateToProps = {\n  algorithm: algorithmSelector,\n}\n\nconst Algorithm = () => {\n  const { dispatch, algorithm } = useRedux(mapStateToProps)\n\n  const handleChange = useCallback(id => () => dispatch(setAlgorithm(id)), [\n    dispatch,\n  ])\n\n  return (\n    <Container title=\"Algorithm\">\n      <List>\n        {algorithmIds.map(algorithmId => (\n          <Row key={algorithmId} onClick={handleChange(algorithmId)}>\n            <Radio checked={algorithm.id === algorithmId} />\n            {capitalize(algorithmsById[algorithmId].label)}\n          </Row>\n        ))}\n      </List>\n      <span css=\"font-size: 0.9em; opacity: 0.7; margin-top: 15px; display: block;\">\n        More algorithms comming soon.\n      </span>\n    </Container>\n  )\n}\n\nexport default Algorithm\n","import React from 'react'\nimport Base from '../Base'\n\nconst AddCircle = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n  </Base>\n)\n\nexport default AddCircle\n","import React from 'react'\nimport Base from '../Base'\n\nconst SubtractCircle = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\" />\n  </Base>\n)\n\nexport default SubtractCircle\n","import styled from 'styled-components'\nimport { transparentize as fade } from 'polished'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const Input = styled.input.attrs({ type: 'number' })`\n  -webkit-appearance: none;\n  margin: 0 4px;\n  color: ${({ theme }) => theme.title};\n  border: none;\n  background-image: none;\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n  outline: none;\n  font-size: inherit;\n  text-align: center;\n  width: 28px;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`\n\nexport const Button = styled.button`\n  color: ${({ theme }) => theme.primary};\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  transition: color 150ms ease;\n  display: flex;\n\n  &:active {\n    transition: color 80ms ease-out;\n    color: ${({ theme }) => fade(0.3, theme.primary)};\n  }\n\n  &[disabled] {\n    color: ${({ theme }) => theme.text.subtle};\n    cursor: default;\n\n    &:active {\n      color: ${({ theme }) => theme.text.subtle};\n    }\n  }\n`\n","import React, { useCallback } from 'react'\nimport AddCircle from '../../icons/AddCircle'\nimport SubtractCircle from '../../icons/SubtractCircle'\nimport { Wrapper, Input, Button } from './style'\n\nconst QuantityCounter = ({ value, onChange, min, max }) => {\n  const handleInputChange = useCallback(\n    event => {\n      const val = event.target.valueAsNumber\n\n      if (isNaN(val)) {\n        onChange(min)\n      } else if (val > max) {\n        onChange(max)\n      } else if (val < min) {\n        onChange(min)\n      } else {\n        onChange(val)\n      }\n    },\n    [onChange]\n  )\n\n  const handleDecrement = () => onChange(value - 1)\n  const handleIncrement = () => onChange(value + 1)\n\n  return (\n    <Wrapper>\n      <Button\n        onClick={handleDecrement}\n        title=\"Decrement\"\n        disabled={value <= min}\n      >\n        <SubtractCircle />\n      </Button>\n      <Input value={value} min={min} max={max} onChange={handleInputChange} />\n      <Button\n        onClick={handleIncrement}\n        title=\"Increment\"\n        disabled={value >= max}\n      >\n        <AddCircle />\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default QuantityCounter\n","import React, { useCallback } from 'react'\nimport { useRedux } from '../../../hooks'\nimport { setNetworkSetting, networkSettingsById } from '../../actions'\nimport { networkSelector } from '../../selectors'\nimport QuantityCounter from '../../../components/QuantityCounter'\nimport { capitalize } from '../../../utils/string'\nimport Container from '../Container'\nimport List, { Row } from '../List'\n\nconst networkSettingIds = Object.keys(networkSettingsById)\n\nconst mapStateToProps = {\n  network: networkSelector,\n}\n\nconst Network = () => {\n  const { dispatch, network } = useRedux(mapStateToProps)\n\n  const handleChange = useCallback(\n    settingId => newValue => dispatch(setNetworkSetting(settingId, newValue)),\n    [dispatch]\n  )\n\n  return (\n    <Container title=\"Network\">\n      <List>\n        {networkSettingIds.map(settingId => (\n          <Row key={settingId}>\n            {capitalize(networkSettingsById[settingId].label)}\n            <div css=\"flex-grow: 1;\" />\n            <QuantityCounter\n              value={network[settingId]}\n              onChange={handleChange(settingId)}\n              min={networkSettingsById[settingId].min}\n              max={networkSettingsById[settingId].max}\n            />\n          </Row>\n        ))}\n      </List>\n    </Container>\n  )\n}\n\nexport default Network\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Base from '../Base'\n\nconst CheckBox = props => (\n  <Base {...props}>\n    {props.checked ? (\n      <>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n      </>\n    ) : (\n      <>\n        <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </>\n    )}\n  </Base>\n)\n\nCheckBox.propTypes = {\n  checked: PropTypes.bool,\n}\n\nexport default CheckBox\n","import styled from 'styled-components'\nimport { Row as unStyledRow } from '../List'\nimport IconBase from '../../../icons/Base'\n\nexport const Row = styled(unStyledRow)`\n  cursor: pointer;\n\n  ${IconBase} {\n    margin-right: 8px;\n  }\n`\n\nexport const Icon = styled.span`\n  margin-right: 8px;\n`\n","import React, { useCallback } from 'react'\nimport CheckBox from '../../../icons/CheckBox'\nimport { useRedux } from '../../../hooks'\nimport { capitalize } from '../../../utils/string'\nimport { toggleKernel, kernelNamesById } from '../../actions'\nimport { kernelsSelector } from '../../selectors'\nimport Container from '../Container'\nimport List from '../List'\nimport { Row } from './style'\n\nconst kernelIds = Object.keys(kernelNamesById)\n\nconst mapStateToProps = {\n  kernels: kernelsSelector,\n}\n\nconst Kernels = () => {\n  const { dispatch, kernels } = useRedux(mapStateToProps)\n\n  const handleChange = useCallback(\n    kernelId => () => dispatch(toggleKernel(kernelId)),\n    [dispatch]\n  )\n\n  return (\n    <Container title=\"Kernels\">\n      <List>\n        {kernelIds.map(kernelId => (\n          <Row\n            key={kernelId}\n            checked={kernels[kernelId]}\n            onClick={handleChange(kernelId)}\n          >\n            <CheckBox checked={kernels[kernelId]} />\n            {capitalize(kernelNamesById[kernelId])}\n          </Row>\n        ))}\n      </List>\n    </Container>\n  )\n}\n\nexport default Kernels\n","import React from 'react'\nimport Base from '../Base'\n\nconst Play = props => (\n  <Base {...props}>\n    <path d=\"M8 5v14l11-7z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </Base>\n)\n\nexport default Play\n","import React from 'react'\nimport Base from '../Base'\n\nconst Pause = props => (\n  <Base {...props}>\n    <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </Base>\n)\n\nexport default Pause\n","import React from 'react'\nimport CircleButton from '../../../components/CircleButton'\nimport Play from '../../../icons/Play'\nimport Pause from '../../../icons/Pause'\n\nconst PlayPauseButton = ({\n  isPlaying,\n  handlePause,\n  handlePlay,\n  ...restProps\n}) => (\n  <CircleButton\n    {...restProps}\n    onClick={isPlaying ? handlePause : handlePlay}\n    title={isPlaying ? 'Pause' : 'Play'}\n    size={58}\n    padding={10}\n  >\n    {isPlaying ? <Pause size={null} /> : <Play size={null} />}\n  </CircleButton>\n)\n\nexport default PlayPauseButton\n","import React from 'react'\nimport Base from '../Base'\n\nconst Reset = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\" />\n  </Base>\n)\n\nexport default Reset\n","import React from 'react'\nimport Base from '../Base'\n\nconst Next = props => (\n  <Base {...props}>\n    <path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </Base>\n)\n\nexport default Next\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useRedux } from '../../../hooks'\nimport {\n  startEvolution,\n  pauseEvolution,\n  resetEvolution,\n  stepEvolution,\n} from '../../actions'\nimport { evolutionStateSelector } from '../../selectors'\nimport PlayPauseButton from '../PlayPauseButton'\nimport CircleButton from '../../../components/CircleButton'\nimport Reset from '../../../icons/Reset'\nimport Next from '../../../icons/Next'\n\nconst ControlWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0 30px;\n\n  & button:nth-child(2) {\n    margin-left: 20px;\n    margin-right: 20px;\n  }\n`\n\nconst mapStateToProps = {\n  evolutionState: evolutionStateSelector,\n}\n\nconst Controls = () => {\n  const { dispatch, evolutionState } = useRedux(mapStateToProps)\n\n  const handleReset = useCallback(() => dispatch(resetEvolution()), [dispatch])\n  const handlePlay = useCallback(() => dispatch(startEvolution()), [dispatch])\n  const handlePause = useCallback(() => dispatch(pauseEvolution()), [dispatch])\n  const handleStep = useCallback(() => dispatch(stepEvolution()), [dispatch])\n\n  return (\n    <ControlWrapper>\n      <CircleButton onClick={handleReset} title=\"Reset\">\n        <Reset size={null} />\n      </CircleButton>\n      <PlayPauseButton\n        isPlaying={evolutionState === 'EVOLVING'}\n        handlePlay={handlePlay}\n        handlePause={handlePause}\n      />\n      <CircleButton onClick={handleStep} title=\"Next step\">\n        <Next size={null} />\n      </CircleButton>\n    </ControlWrapper>\n  )\n}\n\nexport default Controls\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRedux } from '../../../hooks'\nimport { currentStepSelector, lossSelector } from '../../selectors'\n\nconst significant4 = number => number.toPrecision(4)\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 20px 0 15px;\n`\n\nconst Row = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: 16px;\n  line-height: 1.7;\n`\n\nconst Heading = styled.b`\n  font-size: 18px;\n  margin-right: 0.25em;\n`\n\nconst mapStateToProps = {\n  currentStep: currentStepSelector,\n  loss: lossSelector,\n}\n\nconst Information = () => {\n  const { currentStep, loss } = useRedux(mapStateToProps)\n\n  return (\n    <List>\n      <Row>\n        <Heading>Loss:</Heading>\n        {loss && significant4(loss)}\n      </Row>\n      <Row>\n        <Heading>Step:</Heading>\n        {currentStep}\n      </Row>\n    </List>\n  )\n}\n\nexport default Information\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ReferenceLine,\n  ResponsiveContainer,\n} from 'recharts'\nimport Controls from '../Controls'\nimport GridContainer from '../../../components/GridContainer'\nimport Divider from '../../../components/Divider'\nimport { useRedux } from '../../../hooks'\nimport { stepsSelector, isDoneSelector } from '../../selectors'\nimport Information from '../Information'\n\nconst StyledLineChart = styled(LineChart)`\n  .recharts-curve {\n    stroke: ${({ theme }) => theme.title};\n    stroke-width: 2px;\n  }\n\n  .recharts-line-dots circle {\n    stroke: none;\n    fill: ${({ theme }) => theme.title};\n  }\n\n  .recharts-reference-line line {\n    stroke-width: 2px;\n    stroke: ${({ theme }) => theme.text.subtle};\n    stroke-dasharray: none;\n  }\n\n  .recharts-cartesian-grid-horizontal line {\n    stroke: ${({ theme }) => theme.border.divider};\n    stroke-dasharray: 3, 3;\n\n    &:nth-last-child(2) {\n      stroke-width: 2px;\n      stroke: rgba(0, 0, 0, 0);\n    }\n\n    &:nth-last-child(1) {\n      stroke-width: 2px;\n      stroke: ${({ theme }) => theme.text.subtle};\n      stroke-dasharray: none;\n    }\n  }\n`\n\nconst getData = (data, isDone) => {\n  if (isDone) {\n    return data.slice(0, data.length - 1)\n  } else {\n    return data\n  }\n}\n\nconst mapStateToProps = {\n  steps: stepsSelector,\n  isDone: isDoneSelector,\n}\n\nconst Evolve = () => {\n  const { steps, isDone } = useRedux(mapStateToProps)\n\n  // remove lest entry from steps when done\n  // because the log scale doesn't handle 0\n  const data = getData(steps, isDone)\n\n  return (\n    <GridContainer>\n      <Controls />\n      <Divider />\n      <Information />\n      <div css=\"margin: 0 5px; position: relative; padding-bottom: 65%;\">\n        <div css=\"width: 100%; height: 100%; position: absolute;\">\n          <ResponsiveContainer style={{ position: 'absolute' }}>\n            <StyledLineChart\n              data={data}\n              margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n            >\n              <XAxis\n                dataKey=\"step\"\n                type=\"number\"\n                domain={[0, dataMax => Math.max(dataMax, 1000)]}\n                hide\n              />\n              <YAxis\n                scale=\"log\"\n                domain={[dataMin => dataMin * 0.9, dataMax => dataMax * 1.1]}\n                hide\n              />\n              <CartesianGrid vertical={false} />\n              <ReferenceLine x={0} />\n              <Line type=\"stepAfter\" dataKey=\"loss\" dot={false} />\n            </StyledLineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </GridContainer>\n  )\n}\n\nexport default Evolve\n","import styled from 'styled-components'\nimport { up } from 'styled-breakpoints'\nimport { LineChart } from 'recharts'\nimport unStyledGridContainer from '../../../components/GridContainer'\n\nexport const StyledLineChart = styled(LineChart)`\n  .recharts-curve {\n    stroke-width: 1px;\n  }\n\n  .recharts-line-dots circle {\n    stroke: ${({ theme }) => theme.surface.regular};\n    stroke-width: 2px;\n  }\n\n  .recharts-cartesian-axis-line,\n  .recharts-cartesian-axis-tick-line {\n    stroke-width: 2px;\n    stroke: ${({ theme }) => theme.text.subtle};\n  }\n\n  .recharts-cartesian-grid line {\n    stroke: ${({ theme }) => theme.border.divider};\n    stroke-dasharray: 3, 3;\n  }\n\n  .recharts-legend-item:last-child {\n    margin-right: 0;\n  }\n\n  .recharts-legend-item-text {\n    font-size: 14px;\n    color: ${({ theme }) => theme.text.regular};\n  }\n`\n\nexport const GridContainer = styled(unStyledGridContainer)`\n  grid-column-end: span 1;\n\n  ${up('sm')} {\n    grid-column-end: span 2;\n  }\n`\n","import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport 'katex/dist/katex.min.css'\nimport { InlineMath } from 'react-katex'\nimport {\n  Line,\n  XAxis,\n  YAxis,\n  Legend,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts'\nimport { useRedux } from '../../../hooks'\nimport Divider from '../../../components/Divider'\nimport { dcgpSelector, chromosomeSelector } from '../../../evolution/selectors'\nimport {\n  inputKeysSelector,\n  outputKeysSelector,\n  pointsSelector,\n  equationSelector,\n} from '../../../dataset/selectors'\nimport {\n  activeKernelsSelector,\n  settingsSelector,\n} from '../../../settings/selectors'\nimport { StyledLineChart, GridContainer } from './style'\n\n// const throttle = (func, limit) => {\n//   let inThrottle\n//   return function() {\n//     const args = arguments\n//     const context = this\n//     if (!inThrottle) {\n//       func.apply(context, args)\n//       inThrottle = true\n//       setTimeout(() => {\n//         inThrottle = false\n//       }, limit)\n//     }\n//   }\n// }\n\nconst mapStateToProps = {\n  inputs: inputKeysSelector,\n  outputs: outputKeysSelector,\n  points: pointsSelector,\n  equation: equationSelector,\n  dcgp: dcgpSelector,\n  chromosome: chromosomeSelector,\n  activeKernelIds: activeKernelsSelector,\n  parameters: settingsSelector,\n}\n\nconst Plot = () => {\n  const {\n    inputs,\n    outputs,\n    points,\n    equation,\n    dcgp,\n    chromosome,\n    activeKernelIds,\n    parameters,\n  } = useRedux(mapStateToProps)\n\n  const theme = useContext(ThemeContext)\n\n  let predictions\n\n  const {\n    seed,\n    network: { rows, columns, arity, levelsBack },\n  } = parameters\n\n  // TODO: throttle prediction calculations\n  if (dcgp.KernelSet && dcgp.Expression && chromosome) {\n    // TODO: move to dcgp.worker.js\n    const myKernelSet = new dcgp.KernelSet(activeKernelIds)\n    const myExpression = new dcgp.Expression(\n      inputs.length,\n      outputs.length,\n      rows,\n      columns,\n      levelsBack,\n      arity,\n      myKernelSet,\n      seed\n    )\n\n    myExpression.setChromosome(chromosome)\n\n    predictions = points.map(point => {\n      const result = myExpression.getResult(inputs.map(input => point[input]))\n      return result[0]\n    })\n\n    myKernelSet.destroy()\n    myExpression.destroy()\n  }\n\n  const data = predictions\n    ? points.map((point, i) => ({ ...point, prediction: predictions[i] }))\n    : points\n\n  return (\n    <GridContainer>\n      <div css=\"margin: 0 5px; position: relative; padding-bottom: 65%;\">\n        <div css=\"width: 100%; height: 100%; position: absolute;\">\n          <ResponsiveContainer>\n            <StyledLineChart\n              data={data}\n              margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n            >\n              <CartesianGrid />\n              <XAxis dataKey={inputs[0]} type=\"number\" />\n              <YAxis />\n              <Legend verticalAlign=\"top\" height={36} />\n              <Line\n                name=\"labels\"\n                type=\"monotone\"\n                dataKey={outputs[0]}\n                dot={{ fill: theme.primary, r: 4 }}\n                stroke={theme.primary}\n              />\n              <Line\n                name=\"predictions\"\n                dataKey=\"prediction\"\n                type=\"monotone\"\n                dot={{ fill: theme.secundary, r: 4 }}\n                stroke={theme.secundary}\n              />\n            </StyledLineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n      <Divider css=\"margin: 15px 0;\" />\n      {equation && (\n        <p>\n          Label equation: <InlineMath>{equation}</InlineMath>\n        </p>\n      )}\n    </GridContainer>\n  )\n}\n\nexport default Plot\n","import React from 'react'\nimport GlobalStyle from '../../styles/GlobalStyle'\nimport Navigation from '../Navigation'\nimport Footer from '../Footer'\nimport Page from '../Page'\nimport Divider from '../Divider'\nimport { Dataset } from '../../dataset'\nimport { Kernels, Network, Algorithm } from '../../settings'\nimport { Evolution } from '../../evolution'\nimport { Plot } from '../../visualisation'\n\nconst Body = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Navigation handleMenuToggle={console.log} />\n      <Page>\n        <Dataset />\n        <div css=\"grid-column: full;\">\n          <Divider />\n        </div>\n        <Evolution />\n        <Kernels />\n        <Network />\n        <Algorithm />\n        <Plot />\n      </Page>\n      <Footer />\n    </>\n  )\n}\n\nexport default Body\n","import React from 'react'\nimport Theme from '../../styles/Theme'\nimport Body from '../Body'\n\nconst App = () => (\n  <Theme>\n    <Body />\n  </Theme>\n)\n\nexport default App\n","/* eslint-env serviceworker */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}