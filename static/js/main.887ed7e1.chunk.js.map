{"version":3,"sources":["evolution/worker/dcgp.worker.js","styles/colors.js","styles/breakpoints.js","evolution/actions.js","evolution/reducers.js","settings/actions.js","settings/reducers.js","dataset/pointsPresets/linear.js","dataset/actions.js","dataset/pointsPresets/sinc.js","dataset/pointsPresets/sinExp.js","dataset/pointsPresets/noisyParabola.js","dataset/reducers.js","reducers.js","evolution/middleware/worker.js","utils/throttle.js","dataset/selectors.js","evolution/middleware/predictions.js","evolution/middleware/done.js","utils/actions.js","settings/selectors.js","evolution/middleware/initialEvolution.js","evolution/middleware/pause.js","evolution/selectors.js","evolution/middleware/index.js","evolution/middleware/play.js","evolution/middleware/progress.js","evolution/middleware/reset.js","settings/middleware.js","dataset/middleware.js","middleware.js","store.js","hooks.js","styles/Theme.js","styles/GlobalStyle.js","components/AppBar/AppBar.js","components/CircleButton/CircleButton.js","icons/Base/Base.js","icons/GitHub/GitHub.js","icons/Menu/Menu.js","components/Navigation/Navigation.js","components/Footer/Footer.js","components/Page/Page.js","components/Divider/Divider.js","icons/Radio/Radio.js","utils/string.js","dataset/components/Dataset/Dataset.js","components/GridContainer/GridContainer.js","components/SubHeader/SubHeader.js","settings/components/Container/Container.js","settings/components/List/List.js","settings/components/Algorithm/style.js","settings/components/Algorithm/Algorithm.js","icons/AddCircle/AddCircle.js","icons/SubtractCircle/SubtractCircle.js","components/QuantityCounter/style.js","components/QuantityCounter/QuantityCounter.js","settings/components/Network/Network.js","icons/CheckBox/CheckBox.js","settings/components/Kernels/style.js","settings/components/Kernels/Kernels.js","icons/Play/Play.js","icons/Pause/Pause.js","evolution/components/PlayPauseButton/PlayPauseButton.js","icons/Reset/Reset.js","icons/Next/Next.js","evolution/components/Controls/Controls.js","evolution/components/Information/Information.js","evolution/components/Evolution/Evolution.js","dataset/hooks.js","visualisation/components/Plot/style.js","visualisation/components/Plot/Plot.js","components/Body/Body.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_require__","p","bright","red","yellow","blue","azure","green","orange","grays","DAY","Object","objectSpread","dark","background","border","content","fade","divider","dividerOpacity","heading","headingSubtle","primary","secundary","surface","regular","selected","text","bold","subtle","title","NIGHT","breakpoints","xs","sm","md","lg","xl","prefix","SET_DCGP_INSTANCE","sendWorkerMessage","action","type","payload","START_EVOLUTION","PAUSE_EVOLUTION","RESET_EVOLUTION","DONE_EVOLUTION","SET_INITIAL_EVOLUTION","EVOLUTION_PROGRESS","pauseEvolution","resetEvolution","combineReducers","instance","state","arguments","length","undefined","actions","isEvolving","isDone","initial","steps","concat","toConsumableArray","SET_SEED","TOGGLE_KERNEL","kernelNamesById","sum","diff","mul","pdiv","sin","cos","log","exp","SET_ROWS","SET_COLUMNS","SET_ARITY","SET_LEVELS_BACK","networkSettingsById","rows","label","min","max","columns","arity","levelsBack","SET_ALGORITHM","algorithmsById","onePlusLambda","settings","offsprings","maxGenerations","initialKernelState","initialNetworkState","initialAlgorithmState","id","seed","kernels","defineProperty","network","algorithm","SET_POINTS","CHANGE_DATASET","pointsPresetsById","linear","sinc","sinExp","noisyParabola","ADD_INPUT","ADD_OUTPUT","REMOVE_INPUT","REMOVE_OUTPUT","SET_INPUTS","SET_OUTPUTS","SET_PREDICTION_KEYS","REMOVE_PREDICTION_KEYS","SET_PREDICTION_POINTS","REMOVE_PREDICTION_POINTS","ADD_PREDICTION_SUBSCRIBER","REMOVE_PREDICTION_SUBSCRIBER","SET_PREDICTION_EQUATIONS","xBounds","inputPoints","index","push","pointsPresets_linear","equation","inputs","outputs","points","map","x","y","1","pointsPresets_sinc","calc","Math","isNaN","pointsPresets_sinExp","pointsPresets_noisyParabola","pow","random","client","filter","item","byId","linearPreset","sincPreset","sinExpPreset","noisyParabolaPreset","prediction","keys","equations","subscribers","evolution","datasets","handleWorker","store","worker","onmessage","message","dispatch","data","next","postMessage","throttle","func","limit","inThrottle","apply","setTimeout","datasetIdSelector","selectedDatasetSelector","createSelector","equationSelector","dataset","inputKeysSelector","outputKeysSelector","pointsSelector","inputsSelector","point","input","labelsSelector","output","predictionKeysSelector","predictionRequest","getState","inputKeys","predictionKeys","throttledPredictionRequest","round","handleCalcPredictions","handleDone","addPayload","settingsSelector","kernelsSelector","activeKernelsSelector","reduce","pre","cur","handleInitialEvolution","activeKernelIds","parameters","labels","handlePause","stepsSelector","currentStepSelector","step","lossSelector","loss","secondLastlossSelector","evolutionStateSelector","chromosome","middleware","done","initialEvolution","pause","currentStep","predictions","secondLastLoss","lastLoss","predicitionSubscribers","predictionsSubscribersSelector","setSeed","settings_middleware","Error","_action$payload","settingId","value","dispatchSetPredictionKeys","key","dataset_middleware","src_middleware","preloadedState","createStore","reducers","compose","applyMiddleware","middlewares","useRedux","mapStateToProps","propsSelector","useMemo","selectors","values","_len","args","Array","_key","prev","i","getPropsSelector","_useState","useState","_useState2","slicedToArray","props","setProps","useEffect","subscribe","newProps","assign","useMediaQuery","query","queryList","window","matchMedia","_useState5","matches","_useState6","setMatches","handleMatchesChange","event","addListener","removeListener","Theme","_ref","children","wantsLightTheme","theme","react_default","a","createElement","styled_components_browser_esm","createGlobalStyle","_templateObject","styledNormalize","_ref2","AppBar","styled","header","withConfig","displayName","componentId","propTypes","PropTypes","any","CircleButton","button","variant","css","_ref3","size","_ref4","_ref5","padding","_ref6","_ref7","onClick","string","isRequired","element","number","oneOf","defaultProps","Base","svg","attrs","width","height","xmlns","viewBox","checked","GitHub","Base_Base","d","Menu","fill","Title","h1","up","Padding","div","Width","Navigation","handleMenuToggle","isWideEnough","AppBar_AppBar","_StyledCircleButton","icons_Menu_Menu","CircleButton_CircleButton","as","href","icons_GitHub_GitHub","Text","className","restProps","objectWithoutProperties","Date","getFullYear","_StyledSpan","Page","main","propType","childern","node","Divider","hr","Radio","Fragment","capitalize","str","charAt","toUpperCase","slice","presetIds","Heading","h2","List","ul","Item","li","Label","span","datasetId","Dataset","_useRedux","handleClick","useCallback","_StyledDiv","icons_Radio_Radio","GridContainer","SubHeader","SettingsContainer","GridContainer_GridContainer","SubHeader_SubHeader","_StyledDivider","Row","unStyledRow","IconBase","algorithmIds","Algorithm","handleChange","Container","List_List","algorithmId","style_Row","Algorithm_StyledSpan","AddCircle","SubtractCircle","Wrapper","Input","Button","QuantityCounter","onChange","handleInputChange","val","target","valueAsNumber","disabled","icons_SubtractCircle_SubtractCircle","icons_AddCircle_AddCircle","networkSettingIds","Network","newValue","setNetworkSetting","Network_StyledDiv","components_QuantityCounter_QuantityCounter","CheckBox","kernelIds","Kernels","kernelId","toggleKernel","Kernels_style_Row","icons_CheckBox_CheckBox","Play","Pause","PlayPauseButton","isPlaying","handlePlay","icons_Pause_Pause","icons_Play_Play","Reset","Next","ControlWrapper","evolutionState","Controls","handleReset","handleStep","icons_Reset_Reset","components_PlayPauseButton_PlayPauseButton","icons_Next_Next","b","Information","Information_List","Information_Row","Information_Heading","toPrecision","StyledLineChart","LineChart","Evolve","getData","components_Controls_Controls","Divider_Divider","components_Information_Information","Evolution_StyledDiv","_StyledDiv2","es6","style","position","margin","top","right","bottom","left","dataKey","domain","dataMax","hide","scale","dataMin","vertical","dot","animationDuration","usePredictions","unStyledGridContainer","CopyButton","predictionEquations","Plot","copyButton","useRef","_usePredictions","useContext","ThemeContext","style_GridContainer","Plot_StyledDiv","Plot_StyledDiv2","style_StyledLineChart","verticalAlign","name","r","stroke","Plot_StyledDivider","_StyledDiv3","Plot_StyledSpan","react_katex","_StyledDiv4","_StyledSpan2","ref","copy","_StyledDiv5","Body","GlobalStyle","components_Navigation_Navigation","console","Page_Page","components_Dataset_Dataset","Body_StyledDiv","Evolution","components_Kernels_Kernels","components_Network_Network","components_Algorithm_Algorithm","components_Plot_Plot","components_Footer_Footer","App","styles_Theme","components_Body_Body","Boolean","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.887ed7e1.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"6ca3aebf49235df01f4d.worker.js\");\n};","import { transparentize as fade } from 'polished'\n\nexport const bright = {\n  red: '#D0103A',\n  yellow: '#FDC82F',\n  blue: '#00338D',\n  azure: '#0098DB',\n  green: '#008542',\n  orange: '#E37222',\n}\n\nexport const dark = {\n  red: '#822433',\n  yellow: '#B88B00',\n  blue: '#002664',\n  azure: '#00549F',\n  green: '#284E36',\n  orange: '#9D5116',\n}\n\nexport const grays = {\n  '000': '#FFFFFF',\n  '100': '#F5F5F5',\n  '200': '#D5D6D2',\n  '250': '#9A9B9C',\n  '300': '#747678',\n  '400': '#666666',\n  '500': '#4D4F53',\n  '600': '#363636',\n  '700': '#222222',\n  '800': '#171717',\n  '900': '#000000',\n}\n\nexport const DAY = {\n  ...bright,\n  dark,\n  background: grays['000'],\n  border: {\n    content: fade(0.9, grays['900']),\n    divider: grays['200'],\n    dividerOpacity: fade(0.85, grays['900']),\n  },\n  heading: grays['800'],\n  headingSubtle: grays['600'],\n  primary: bright.red,\n  secundary: bright.yellow,\n  surface: {\n    regular: grays['100'],\n    selected: grays['200'],\n  },\n  text: {\n    regular: grays['700'],\n    bold: grays['900'],\n    subtle: grays['400'],\n  },\n  title: grays['900'],\n}\n\nexport const NIGHT = {\n  ...bright,\n  background: grays['800'],\n  border: {\n    content: fade(0.9, grays['000']),\n    divider: grays['500'],\n    dividerOpacity: fade(0.85, grays['000']),\n  },\n  heading: grays['100'],\n  headingSubtle: grays['600'],\n  primary: bright.red,\n  secundary: bright.yellow,\n  surface: {\n    regular: grays['700'],\n    selected: grays['500'],\n  },\n  text: {\n    regular: grays['200'],\n    bold: grays['000'],\n    subtle: grays['300'],\n  },\n  title: grays['000'],\n}\n","export default {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n}\n","// the namespace for the actions in this file\n// prevents actions from being declared multiple times\nconst prefix = '[evolution] '\n\nexport const SET_DCGP_INSTANCE = prefix + 'SET_DCGP_INSTANCE'\n\nexport const setDcgpInstance = instance => ({\n  type: SET_DCGP_INSTANCE,\n  payload: instance,\n})\n\nexport const WORKER_MESSAGE_IN = prefix + 'WORKER_MESSAGE_IN'\nexport const WORKER_MESSAGE_OUT = prefix + 'WORKER_MESSAGE_OUT'\n\nexport const sendWorkerMessage = action => ({\n  type: WORKER_MESSAGE_OUT,\n  payload: action,\n})\n\nexport const START_EVOLUTION = prefix + 'START_EVOLUTION'\nexport const PAUSE_EVOLUTION = prefix + 'PAUSE_EVOLUTION'\nexport const RESET_EVOLUTION = prefix + 'RESET_EVOLUTION'\nexport const STEP_EVOLUTION = prefix + 'STEP_EVOLUTION'\nexport const DONE_EVOLUTION = prefix + 'DONE_EVOLUTION'\nexport const GET_INITIAL_EVOLUTION = prefix + 'GET_INITIAL_EVOLUTION'\nexport const SET_INITIAL_EVOLUTION = prefix + 'SET_INITIAL_EVOLUTION'\nexport const LOSS_THRESHOLD = 1e-14\nexport const EVOLUTION_PROGRESS = prefix + 'EVOLUTION_PROGRESS'\n\nexport const getInitialEvolution = () => ({\n  type: GET_INITIAL_EVOLUTION,\n})\n\nexport const setInitialEvolution = resultObj => ({\n  type: SET_INITIAL_EVOLUTION,\n  payload: resultObj,\n})\n\nexport const startEvolution = () => ({\n  type: START_EVOLUTION,\n})\n\nexport const pauseEvolution = () => ({\n  type: PAUSE_EVOLUTION,\n})\n\nexport const resetEvolution = () => ({\n  type: RESET_EVOLUTION,\n})\n\nexport const stepEvolution = () => ({\n  type: STEP_EVOLUTION,\n})\n\nexport const doneEvolution = () => ({\n  type: DONE_EVOLUTION,\n})\n\nexport const evolutionProgress = resultObj => ({\n  type: EVOLUTION_PROGRESS,\n  payload: resultObj,\n})\n\nexport const SET_EXPRESSION = prefix + 'SET_EXPRESSION'\n\nexport const setExpression = expression => ({\n  type: SET_EXPRESSION,\n  payload: expression,\n})\n","/* state structure\n{\n  instance: {\n    KernelSet: KernelSet,\n    Kernel: Kernel,\n    Expression: Expression,\n  },\n  isEvolving: Bool,\n  isDone: Bool,\n  initial: {\n    loss: Number,\n    chromosome: [Number],\n  },\n  steps: [{\n    loss: Number,\n    chromosome: [Number],\n    step: Number,\n  }],\n}\n*/\n\nimport { combineReducers } from 'redux'\nimport * as actions from './actions'\n\nfunction instance(state = {}, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_DCGP_INSTANCE:\n      return { ...state, ...payload }\n    default:\n      return state\n  }\n}\n\nfunction isEvolving(state = false, action) {\n  const { type } = action\n\n  switch (type) {\n    case actions.START_EVOLUTION:\n      return true\n    case actions.PAUSE_EVOLUTION:\n    case actions.RESET_EVOLUTION:\n    case actions.DONE_EVOLUTION:\n      return false\n    default:\n      return state\n  }\n}\n\nfunction isDone(state = false, action) {\n  const { type } = action\n\n  switch (type) {\n    case actions.DONE_EVOLUTION:\n      return true\n    case actions.RESET_EVOLUTION:\n      return false\n    default:\n      return state\n  }\n}\n\nfunction initial(state = {}, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_INITIAL_EVOLUTION:\n      return payload\n    case actions.RESET_EVOLUTION:\n      return {}\n    default:\n      return state\n  }\n}\n\nfunction steps(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.EVOLUTION_PROGRESS:\n      return [...state, payload]\n    case actions.RESET_EVOLUTION:\n      return []\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  instance,\n  isEvolving,\n  isDone,\n  initial,\n  steps,\n})\n","// the namespace for the actions in this file\n// prevents actions from being declared multiple times\nconst prefix = '[settings] '\n\nexport const SET_SEED = prefix + 'SET_SEED'\nexport const TOGGLE_KERNEL = prefix + 'TOGGLE_KERNEL'\n\nexport const kernelNamesById = {\n  sum: 'addition',\n  diff: 'subtraction',\n  mul: 'multiplication',\n  pdiv: 'divide',\n  sin: 'sine',\n  cos: 'cosine',\n  log: 'logarithm',\n  exp: 'exponential',\n}\n\nexport const setSeed = seed => ({\n  type: SET_SEED,\n  payload: seed,\n})\n\nexport const toggleKernel = kernelId => ({\n  type: TOGGLE_KERNEL,\n  payload: kernelId,\n})\n\nexport const NETWORK_CHANGE = prefix + 'NETWORK_CHANGE'\nexport const SET_ROWS = prefix + 'SET_ROWS'\nexport const SET_COLUMNS = prefix + 'SET_COLUMNS'\nexport const SET_ARITY = prefix + 'SET_ARITY'\nexport const SET_LEVELS_BACK = prefix + 'SET_LEVELS_BACK'\n\nexport const networkSettingsById = {\n  rows: {\n    label: 'rows',\n    min: 1,\n    max: 10,\n  },\n  columns: {\n    label: 'columns',\n    min: 1,\n    max: 100,\n  },\n  arity: {\n    label: 'arity',\n    min: 2,\n    max: 5,\n  },\n  levelsBack: {\n    label: 'levels back',\n    min: 1,\n    max: 101,\n  },\n}\n\nexport const setRows = rows => ({\n  type: SET_ROWS,\n  payload: rows,\n})\n\nexport const setColumns = columns => ({\n  type: SET_COLUMNS,\n  payload: columns,\n})\n\nexport const setArity = arity => ({\n  type: SET_ARITY,\n  payload: arity,\n})\n\nexport const setLevelsBack = levelsBack => ({\n  type: SET_LEVELS_BACK,\n  payload: levelsBack,\n})\n\nexport const setNetworkSetting = (settingId, value) => ({\n  type: NETWORK_CHANGE,\n  payload: {\n    settingId,\n    value,\n  },\n})\n\nexport const SET_ALGORITHM = prefix + 'SET_ALGORITHM'\n\n// name of the function exported by dcgp.js\nexport const algorithmsById = {\n  onePlusLambda: {\n    label: 'one plus lambda',\n    settings: {\n      offsprings: 4,\n      maxGenerations: 1000,\n    },\n  },\n}\n\nexport const setAlgorithm = algorithmId => ({\n  type: SET_ALGORITHM,\n  payload: algorithmId,\n})\n","/* state structure\n{\n  seed: Number\n  kernels: {\n    sum: Bool,\n    diff: Bool,\n    mul: Bool,\n    div: Bool,\n    pdiv: Bool,\n    sin: Bool,\n    cos: Bool,\n    log: Bool,\n    exp: Bool,\n  },\n  network: {\n    rows: Number,\n    columns: Number,\n    arity: Number,\n    levelsBack: Number\n  }\n  algorithm: {\n    id: String\n    offsprings: Number,\n    maxGenerations: Number,\n  }\n}\n*/\n\nimport { combineReducers } from 'redux'\nimport * as actions from './actions'\n\nfunction seed(state = 12, action) {\n  switch (action.type) {\n    case actions.SET_SEED:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst initialKernelState = {\n  sum: false,\n  diff: true,\n  mul: true,\n  pdiv: true,\n  sin: true,\n  cos: true,\n  log: false,\n  exp: false,\n}\n\nfunction kernels(state = initialKernelState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.TOGGLE_KERNEL:\n      return { ...state, [payload]: !state[payload] }\n    default:\n      return state\n  }\n}\n\nconst initialNetworkState = {\n  rows: 1, // min 1\n  columns: 25, // min 1\n  arity: 2, // min 2\n  levelsBack: 5, // min 1\n}\n\nfunction network(state = initialNetworkState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_ROWS:\n      return { ...state, rows: payload }\n    case actions.SET_COLUMNS:\n      return { ...state, columns: payload }\n    case actions.SET_ARITY:\n      return { ...state, arity: payload }\n    case actions.SET_LEVELS_BACK:\n      return { ...state, levelsBack: payload }\n    default:\n      return state\n  }\n}\n\nconst initialAlgorithmState = {\n  id: 'onePlusLambda',\n  offsprings: 4,\n  maxGenerations: 1000,\n}\n\nfunction algorithm(state = initialAlgorithmState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_ALGORITHM:\n      return { ...state, id: payload }\n    default:\n      return state\n  }\n}\n\nconst settings = combineReducers({\n  seed,\n  kernels,\n  network,\n  algorithm,\n})\n\nexport default settings\n","const xBounds = {\n  start: -10,\n  end: 10,\n  step: 1,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => ({\n  y: 2 * x + 2,\n  '1': 1,\n  x,\n}))\n\nexport default {\n  equation: 'y = 2x+2',\n  inputs: ['x', '1'],\n  outputs: ['y'],\n  points,\n}\n","// the namespace for the actions in this file\n// prevents actions from being declared multiple times\nconst prefix = '[dataset] '\n\nexport const SET_POINTS = prefix + 'SET_POINTS'\nexport const CHANGE_DATASET = prefix + 'CHANGE_DATASET'\nexport const SET_POINTS_PRESET = prefix + 'SET_POINTS_PRESET'\n\nexport const pointsPresetsById = {\n  linear: {\n    label: 'linear',\n  },\n  sinc: {\n    label: 'cardinal sine',\n  },\n  sinExp: {\n    label: 'sine of exponent',\n  },\n  noisyParabola: {\n    label: 'noisy parabola',\n  },\n}\n\nexport const setPoints = points => ({\n  type: SET_POINTS,\n  payload: points,\n})\n\nexport const changeDataset = datasetId => ({\n  type: CHANGE_DATASET,\n  payload: datasetId,\n})\n\nexport const ADD_INPUT = prefix + 'ADD_INPUT'\nexport const ADD_OUTPUT = prefix + 'ADD_OUTPUT'\nexport const REMOVE_INPUT = prefix + 'REMOVE_INPUT'\nexport const REMOVE_OUTPUT = prefix + 'REMOVE_OUTPUT'\nexport const SET_INPUTS = prefix + 'SET_INPUTS'\nexport const SET_OUTPUTS = prefix + 'SET_OUTPUTS'\n\nexport const SET_PREDICTION_KEYS = prefix + 'SET_PREDICTION_KEYS'\nexport const REMOVE_PREDICTION_KEYS = prefix + 'REMOVE_PREDICTION_KEYS'\nexport const SET_PREDICTION_POINTS = prefix + 'SET_PREDICTION_POINTS'\nexport const REMOVE_PREDICTION_POINTS = prefix + 'REMOVE_PREDICTION_POINTS'\nexport const ADD_PREDICTION_SUBSCRIBER = prefix + 'ADD_PREDICTION_SUBSCRIBER'\nexport const REMOVE_PREDICTION_SUBSCRIBER =\n  prefix + 'REMOVE_PREDICTION_SUBSCRIBER'\nexport const CALC_PREDICTIONS = prefix + 'CALC_PREDICTIONS'\nexport const SET_PREDICTION_EQUATIONS = prefix + 'SET_PREDICTION_EQUATIONS'\n\nexport const setPredictionKeys = keys => ({\n  type: SET_PREDICTION_KEYS,\n  payload: keys,\n})\n\nexport const removePredictionKeys = () => ({\n  type: REMOVE_PREDICTION_KEYS,\n})\n\nexport const setPredictionPoints = points => ({\n  type: SET_PREDICTION_POINTS,\n  payload: points,\n})\n\nexport const removePredictionPoints = () => ({\n  type: REMOVE_PREDICTION_POINTS,\n})\n\nexport const addPredictionSubscriber = id => ({\n  type: ADD_PREDICTION_SUBSCRIBER,\n  payload: id,\n})\n\nexport const removePredictionSubscriber = id => ({\n  type: REMOVE_PREDICTION_SUBSCRIBER,\n  payload: id,\n})\n\nexport const calcPredictions = points => ({\n  type: CALC_PREDICTIONS,\n  payload: points,\n})\n\nexport const setPredictionEquations = equations => ({\n  type: SET_PREDICTION_EQUATIONS,\n  payload: equations,\n})\n","const xBounds = {\n  start: -10,\n  end: 10,\n  step: 1,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => {\n  const calc = Math.sin(x) / x\n\n  return {\n    y: isNaN(calc) ? 1 : calc,\n    x,\n  }\n})\n\nexport default {\n  equation: 'y = \\\\sin(x) \\\\div x',\n  inputs: ['x'],\n  outputs: ['y'],\n  points,\n}\n","const xBounds = {\n  start: 0,\n  end: 4,\n  step: 0.075,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => {\n  const calc = Math.sin(Math.exp(x))\n\n  return {\n    y: isNaN(calc) ? 0 : calc,\n    x,\n  }\n})\n\nexport default {\n  equation: 'y = \\\\sin(\\\\exp(x))',\n  inputs: ['x'],\n  outputs: ['y'],\n  points,\n}\n","const xBounds = {\n  start: -4,\n  end: 4,\n  step: 0.3,\n}\n\nconst inputPoints = []\n\nfor (let index = xBounds.start; index <= xBounds.end; index += xBounds.step) {\n  inputPoints.push(index)\n}\n\nconst points = inputPoints.map(x => {\n  // 0.5(x - 2) ^ 2 + 2(x - 2)\n  const calc = 0.5 * Math.pow(x - 2, 2) + 2 * (x - 2) + Math.random() - 0.5 // -0.5 to remove random bias\n\n  return {\n    y: isNaN(calc) ? 1 : calc,\n    x,\n    '1': 1,\n  }\n})\n\nexport default {\n  equation: 'y = 0.5(x - 2)^2 + 2(x - 2) + noise',\n  inputs: ['x', '1'],\n  outputs: ['y'],\n  points,\n}\n","/*\n{\n  id: String,\n  byId: {\n    [String]: {\n      inputs: [String],\n      outputs: [String],\n      equation: ?String,\n      points: [{\n        [String]: Number,\n      }],\n    },\n  },\n  prediction: {\n    keys: [String],\n    points: [{\n      [String]: Number,\n    }],\n    equation: String,\n    subscribers: Number,\n  },\n}\n*/\n\nimport { combineReducers } from 'redux'\nimport * as actions from './actions'\nimport { RESET_EVOLUTION } from '../evolution/actions'\nimport linearPreset from './pointsPresets/linear'\nimport sincPreset from './pointsPresets/sinc'\nimport sinExpPreset from './pointsPresets/sinExp'\nimport noisyParabolaPreset from './pointsPresets/noisyParabola'\n\nfunction id(state = 'sinc', action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.CHANGE_DATASET:\n      return payload\n    default:\n      return state\n  }\n}\n\nconst linear = (state = linearPreset) => state\nconst sinc = (state = sincPreset) => state\nconst sinExp = (state = sinExpPreset) => state\nconst noisyParabola = (state = noisyParabolaPreset) => state\n\nfunction inputs(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.ADD_INPUT:\n      return [...state, payload]\n    case actions.SET_INPUTS:\n      return payload\n    case actions.REMOVE_INPUT:\n      return state.filter(item => item !== payload)\n    default:\n      return state\n  }\n}\n\nfunction outputs(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.ADD_OUTPUT:\n      return [...state, payload]\n    case actions.SET_OUTPUTS:\n      return payload\n    case actions.REMOVE_OUTPUT:\n      return state.filter(item => item !== payload)\n    default:\n      return state\n  }\n}\n\nfunction points(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_POINTS:\n      return payload\n    default:\n      return state\n  }\n}\n\nconst client = combineReducers({\n  outputs,\n  inputs,\n  points,\n})\n\nconst byId = combineReducers({\n  linear,\n  sinc,\n  sinExp,\n  noisyParabola,\n  client,\n})\n\nfunction keys(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_PREDICTION_KEYS:\n      return payload\n    case actions.REMOVE_PREDICTION_KEYS:\n      return []\n    default:\n      return state\n  }\n}\n\nfunction predictionPoints(state = [], action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case actions.SET_PREDICTION_POINTS:\n      return payload\n    case actions.REMOVE_PREDICTION_POINTS:\n    case RESET_EVOLUTION:\n      return []\n    default:\n      return state\n  }\n}\n\nfunction equations(state = [], action) {\n  const { type } = action\n\n  switch (type) {\n    case actions.SET_PREDICTION_EQUATIONS:\n      return action.payload\n    case RESET_EVOLUTION:\n      return []\n    default:\n      return state\n  }\n}\n\nfunction subscribers(state = 0, action) {\n  const { type } = action\n\n  switch (type) {\n    case actions.ADD_PREDICTION_SUBSCRIBER:\n      return state + 1\n    case actions.REMOVE_PREDICTION_SUBSCRIBER:\n      return state - 1\n    default:\n      return state\n  }\n}\n\nconst prediction = combineReducers({\n  keys,\n  points: predictionPoints,\n  equations,\n  subscribers,\n})\n\nexport default combineReducers({\n  id,\n  byId,\n  prediction,\n})\n","import { combineReducers } from 'redux'\nimport evolution from './evolution/reducers'\nimport settings from './settings/reducers'\nimport datasets from './dataset/reducers'\n\nexport default combineReducers({\n  evolution,\n  settings,\n  datasets,\n})\n","import {\n  WORKER_MESSAGE_OUT,\n  SET_DCGP_INSTANCE,\n  getInitialEvolution,\n} from '../actions'\n// eslint-disable-next-line import/default\nimport Worker from '../worker/dcgp.worker'\n\nconst handleWorker = store => {\n  const worker = new Worker()\n\n  worker.onmessage = message => {\n    store.dispatch(message.data)\n  }\n\n  return next => action => {\n    if (action.type === WORKER_MESSAGE_OUT) {\n      worker.postMessage(action.payload)\n    }\n\n    if (action.type === SET_DCGP_INSTANCE) {\n      // initializer(action.payload.module).then(dcgp => {\n      //   next(addPayload(action, dcgp))\n\n      //   store.dispatch(getInitialEvolution())\n      // })\n      store.dispatch(getInitialEvolution())\n    }\n\n    next(action)\n  }\n}\n\nexport default handleWorker\n","/**\n * Creates a throttled version of the `func`.\n * `func` will only be executed with a minimal interval of `limit`.\n * Subsequent calls to the generated function faster then `limit` will have no effect.\n * @function throttle\n * @param {function} func - The function to be throttled.\n * @param {number} limit - The minimum interval in milliseconds `func` needs to wait before it can be called again.\n * @returns {function} The throtteled version of `func`.\n */\nconst throttle = (func, limit) => {\n  let inThrottle\n\n  return (...args) => {\n    if (!inThrottle) {\n      inThrottle = true\n\n      func(...args)\n\n      setTimeout(() => {\n        inThrottle = false\n      }, limit)\n    }\n  }\n}\n\nexport default throttle\n","import { createSelector } from 'reselect'\n\nexport const datasetIdSelector = state => state.datasets.id\n\nexport const selectedDatasetSelector = createSelector(\n  datasetIdSelector,\n  state => state.datasets.byId,\n  (id, datasets) => datasets[id]\n)\n\nexport const equationSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.equation\n)\n\nexport const inputKeysSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.inputs\n)\n\nexport const outputKeysSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.outputs\n)\n\nexport const pointsSelector = createSelector(\n  selectedDatasetSelector,\n  dataset => dataset.points\n)\n\nexport const inputsSelector = createSelector(\n  inputKeysSelector,\n  pointsSelector,\n  (inputs, points) => points.map(point => inputs.map(input => point[input]))\n)\n\nexport const labelsSelector = createSelector(\n  outputKeysSelector,\n  pointsSelector,\n  (outputs, points) => points.map(point => outputs.map(output => point[output]))\n)\n\nexport const predictionsSubscribersSelector = state =>\n  state.datasets.prediction.subscribers\n\nexport const predictionPointsSelector = state =>\n  state.datasets.prediction.points\n\nexport const predictionKeysSelector = state => state.datasets.prediction.keys\n\nexport const predictionEquationsSelector = state =>\n  state.datasets.prediction.equations\n","import { sendWorkerMessage } from '../actions'\nimport throttle from '../../utils/throttle'\nimport {\n  inputsSelector,\n  inputKeysSelector,\n  predictionKeysSelector,\n} from '../../dataset/selectors'\nimport { calcPredictions, CALC_PREDICTIONS } from '../../dataset/actions'\n\nexport const predictionRequest = store => {\n  const state = store.getState()\n\n  const inputs = inputsSelector(state)\n  const inputKeys = inputKeysSelector(state)\n  const predictionKeys = predictionKeysSelector(state)\n\n  store.dispatch(\n    calcPredictions({\n      inputs,\n      inputKeys,\n      predictionKeys,\n    })\n  )\n}\n\nexport const throttledPredictionRequest = throttle(store => {\n  predictionRequest(store)\n}, Math.round(1000 / 2))\n\nconst handleCalcPredictions = store => next => action => {\n  if (action.type === CALC_PREDICTIONS) {\n    store.dispatch(sendWorkerMessage(action))\n  }\n\n  next(action)\n}\n\nexport default handleCalcPredictions\n","import { DONE_EVOLUTION } from '../actions'\nimport { predictionRequest } from './predictions'\n\nconst handleDone = store => next => action => {\n  if (action.type === DONE_EVOLUTION) {\n    next(action)\n\n    predictionRequest(store)\n    return\n  }\n\n  next(action)\n}\n\nexport default handleDone\n","export const addPayload = (action, payload) => ({\n  ...action,\n  payload: { ...action.payload, ...payload },\n})\n","import { createSelector } from 'reselect'\n\nexport const settingsSelector = state => state.settings\n\nexport const networkSelector = state => state.settings.network\n\nexport const kernelsSelector = state => state.settings.kernels\n\nexport const algorithmSelector = state => state.settings.algorithm\n\nexport const activeKernelsSelector = createSelector(\n  kernelsSelector,\n  kernels =>\n    Object.keys(kernels).reduce((pre, cur) => {\n      if (kernels[cur]) {\n        pre.push(cur)\n      }\n\n      return pre\n    }, [])\n)\n","import { GET_INITIAL_EVOLUTION, sendWorkerMessage } from '../actions'\nimport { addPayload } from '../../utils/actions'\nimport { predictionRequest } from './predictions'\nimport {\n  activeKernelsSelector,\n  settingsSelector,\n} from '../../settings/selectors'\nimport { inputsSelector, labelsSelector } from '../../dataset/selectors'\n\nexport const handleInitialEvolution = store => next => action => {\n  if (action.type === GET_INITIAL_EVOLUTION) {\n    next(action)\n    const state = store.getState()\n\n    const activeKernelIds = activeKernelsSelector(state)\n    const parameters = settingsSelector(state)\n    const inputs = inputsSelector(state)\n    const labels = labelsSelector(state)\n\n    store.dispatch(\n      sendWorkerMessage(\n        addPayload(action, {\n          activeKernelIds,\n          parameters,\n          inputs,\n          labels,\n        })\n      )\n    )\n\n    predictionRequest(store)\n    return\n  }\n\n  next(action)\n}\n\nexport default handleInitialEvolution\n","import { PAUSE_EVOLUTION, sendWorkerMessage } from '../actions'\n\nexport const handlePause = store => next => action => {\n  if (action.type === PAUSE_EVOLUTION) {\n    store.dispatch(sendWorkerMessage(action))\n  }\n\n  next(action)\n}\n\nexport default handlePause\n","import { createSelector } from 'reselect'\n\nexport const dcgpSelector = state => state.evolution.instance\n\nexport const stepsSelector = state => state.evolution.steps\n\nexport const isDoneSelector = state => state.evolution.isDone\n\nexport const currentStepSelector = createSelector(\n  stepsSelector,\n  steps => {\n    if (!steps.length) {\n      return 0\n    }\n\n    return steps[steps.length - 1].step\n  }\n)\n\nexport const lossSelector = createSelector(\n  stepsSelector,\n  state => state.evolution.initial,\n  (steps, initial) => {\n    if (!steps.length) {\n      if (initial) {\n        return initial.loss\n      }\n\n      return null\n    }\n\n    return steps[steps.length - 1].loss\n  }\n)\n\nexport const secondLastlossSelector = createSelector(\n  stepsSelector,\n  steps => {\n    if (steps.length < 2) {\n      return null\n    }\n\n    return steps[steps.length - 2].loss\n  }\n)\n\nexport const chromosomeSelector = createSelector(\n  state => state.evolution.steps,\n  state => state.evolution.initial,\n  (steps, initial) => {\n    if (!steps.length) {\n      if (initial) {\n        return initial.chromosome\n      }\n\n      return null\n    }\n\n    return steps[steps.length - 1].chromosome\n  }\n)\n\nexport const evolutionStateSelector = createSelector(\n  state => state.evolution,\n  evolution => {\n    if (evolution.isEvolving) {\n      return 'EVOLVING'\n    }\n\n    if (evolution.steps.length) {\n      return 'PAUSING'\n    }\n\n    return 'EMPTY'\n  }\n)\n","import worker from './worker'\nimport done from './done'\nimport initialEvolution from './initialEvolution'\nimport pause from './pause'\nimport play from './play'\nimport predictions from './predictions'\nimport progress from './progress'\nimport reset from './reset'\n\nexport default [\n  worker,\n  done,\n  initialEvolution,\n  pause,\n  play,\n  predictions,\n  progress,\n  reset,\n]\n","import {\n  STEP_EVOLUTION,\n  START_EVOLUTION,\n  LOSS_THRESHOLD,\n  pauseEvolution,\n  sendWorkerMessage,\n} from '../actions'\nimport { addPayload } from '../../utils/actions'\nimport { currentStepSelector, lossSelector } from '../selectors'\nimport {\n  activeKernelsSelector,\n  settingsSelector,\n} from '../../settings/selectors'\nimport { inputsSelector, labelsSelector } from '../../dataset/selectors'\n\nexport const handlePlay = store => next => action => {\n  if (action.type === STEP_EVOLUTION) {\n    store.dispatch(pauseEvolution())\n  }\n\n  if (action.type === START_EVOLUTION || action.type === STEP_EVOLUTION) {\n    const state = store.getState()\n    const loss = lossSelector(state)\n\n    if (loss !== null && loss <= LOSS_THRESHOLD) {\n      return\n    }\n\n    next(action)\n\n    const activeKernelIds = activeKernelsSelector(state)\n    const parameters = settingsSelector(state)\n    const currentStep = currentStepSelector(state)\n    const inputs = inputsSelector(state)\n    const labels = labelsSelector(state)\n\n    store.dispatch(\n      sendWorkerMessage(\n        addPayload(action, {\n          activeKernelIds,\n          parameters,\n          step: currentStep,\n          inputs,\n          labels,\n        })\n      )\n    )\n\n    return\n  }\n\n  next(action)\n}\n\nexport default handlePlay\n","import { EVOLUTION_PROGRESS } from '../actions'\nimport { throttledPredictionRequest } from './predictions'\nimport { predictionsSubscribersSelector } from '../../dataset/selectors'\nimport { lossSelector, secondLastlossSelector } from '../selectors'\n\nexport const handleProgress = store => next => action => {\n  if (action.type === EVOLUTION_PROGRESS) {\n    const state = store.getState()\n\n    const secondLastLoss = secondLastlossSelector(state)\n    const lastLoss = lossSelector(state)\n    const predicitionSubscribers = predictionsSubscribersSelector(state)\n\n    if (secondLastLoss && secondLastLoss > lastLoss && predicitionSubscribers) {\n      throttledPredictionRequest(store)\n    }\n  }\n\n  next(action)\n}\n\nexport default handleProgress\n","import {\n  RESET_EVOLUTION,\n  sendWorkerMessage,\n  getInitialEvolution,\n} from '../actions'\nimport { setSeed } from '../../settings/actions'\n\nexport const handleReset = store => next => action => {\n  if (action.type === RESET_EVOLUTION) {\n    store.dispatch(sendWorkerMessage(action))\n\n    next(action)\n\n    const seed = Math.round(Math.random() * 1000)\n    store.dispatch(setSeed(seed))\n\n    store.dispatch(getInitialEvolution())\n    return\n  }\n\n  next(action)\n}\n\nexport default handleReset\n","import {\n  TOGGLE_KERNEL,\n  NETWORK_CHANGE,\n  setRows,\n  setColumns,\n  setArity,\n  setLevelsBack,\n} from './actions'\nimport { resetEvolution } from '../evolution/actions'\n\nexport const handleKernelChange = store => next => action => {\n  if (action.type === TOGGLE_KERNEL) {\n    const state = store.getState()\n    const { payload } = action\n\n    if (!(payload in state.settings.kernels)) {\n      throw new Error(`The specified kernelId \"${payload}\" does not exist.`)\n    }\n\n    next(action)\n\n    store.dispatch(resetEvolution())\n    return\n  }\n\n  next(action)\n}\n\nexport const handleNetworkChange = store => next => action => {\n  next(action)\n\n  if (action.type === NETWORK_CHANGE) {\n    const { dispatch } = store\n    const {\n      payload: { settingId, value },\n    } = action\n\n    switch (settingId) {\n      case 'rows':\n        dispatch(setRows(value))\n        break\n      case 'columns':\n        dispatch(setColumns(value))\n        break\n      case 'arity':\n        dispatch(setArity(value))\n        break\n      case 'levelsBack':\n        dispatch(setLevelsBack(value))\n        break\n      default:\n        throw new Error(`settingId ${settingId} is not allowed`)\n    }\n\n    dispatch(resetEvolution())\n  }\n}\n\nexport default [handleKernelChange, handleNetworkChange]\n","import {\n  CHANGE_DATASET,\n  ADD_PREDICTION_SUBSCRIBER,\n  setPredictionKeys,\n} from './actions'\nimport { resetEvolution } from '../evolution/actions'\nimport { outputKeysSelector } from './selectors'\n\nconst dispatchSetPredictionKeys = store => {\n  const state = store.getState()\n  const outputKeys = outputKeysSelector(state)\n  // TODO: ensure that the prediction keys are unique.\n  // Symbol(x) doesnt work because it cannot be transfered over web workers\n  // Making the keys unique on the main thread and keeping the keys seperated\n  // on the web worker might work.\n  const predictionKeys = outputKeys.map(key => key + '_PREDICTION')\n\n  store.dispatch(setPredictionKeys(predictionKeys))\n}\n\nexport const handleDatasetChange = store => next => action => {\n  next(action)\n\n  if (action.type === ADD_PREDICTION_SUBSCRIBER) {\n    dispatchSetPredictionKeys(store)\n  }\n\n  if (action.type === CHANGE_DATASET) {\n    dispatchSetPredictionKeys(store)\n    store.dispatch(resetEvolution())\n  }\n}\n\nexport default [handleDatasetChange]\n","// For example on Redux middleware see:\n// https://github.com/demo-projects/redux-patterns-demo/tree/finish/src/redux/middleware\n// and the corresponding talk by Nir Kaufman: https://www.youtube.com/watch?v=JUuic7mEs-s\nimport evolution from './evolution/middleware'\nimport settings from './settings/middleware'\nimport dataset from './dataset/middleware'\n\nexport default [...evolution, ...settings, ...dataset]\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport reducers from './reducers'\nimport middlewares from './middleware'\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    reducers,\n    preloadedState,\n    compose(applyMiddleware(...middlewares))\n  )\n\n  return store\n}\n","import { useState, useRef, useEffect, useMemo } from 'react'\nimport { createSelector } from 'reselect'\nimport configureStore from './store'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nexport const store = configureStore(/* provide initial state if any */)\n\nconst getPropsSelector = mapStateToProps => {\n  const selectors = Object.values(mapStateToProps)\n  const keys = Object.keys(mapStateToProps)\n\n  const propsSelector = createSelector(\n    ...selectors,\n    (...args) =>\n      args.reduce((prev, cur, i) => ({ ...prev, [keys[i]]: cur }), {})\n  )\n\n  return propsSelector\n}\n\n/**\n * Hook to use values gathered from the Redux store.\n *\n * @function useRedux\n * @param {object} mapStateToProps Object whos values are functions that can calculate a value based on the Redux store.\n * @return {object} Object whos keys are the same as those of `mapStateToProps` with the addition of `dispatch` and whos values are the computed values from the Redux store.\n * @example\n * const { foo, bar, dispatch } = useRedux({\n *  foo: store => store.foo,\n *  bar: store => store.foo.bar,\n * })\n */\nexport const useRedux = mapStateToProps => {\n  const propsSelector = useMemo(() => getPropsSelector(mapStateToProps), [\n    mapStateToProps,\n  ])\n  const [props, setProps] = useState(() => propsSelector(store.getState()))\n\n  useEffect(() => {\n    const handleChange = () => {\n      const state = store.getState()\n      const newProps = propsSelector(state)\n\n      setProps(newProps)\n    }\n\n    const unsubsribe = store.subscribe(handleChange)\n    return unsubsribe\n  }, [propsSelector])\n\n  return Object.assign(props, { dispatch: store.dispatch })\n}\n\n/**\n * Hook to remember and provide the previous value.\n *\n * @param {any} value Value to remember.\n * @returns {any} The previous value of `value` starting with `undifined`.\n */\nexport function usePrevious(value) {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\n/**\n * Hook to get the size and position of a DOM element.\n *\n * @typedef bounds\n * @type {object}\n * @property {number} left The x position of the left side of the element.\n * @property {number} top The y position of the top side of the element.\n * @property {number} width The width of the element.\n * @property {number} height The height of the element.\n *\n * @typedef ref\n * @type React.MutableRefObject<any>\n *\n * @returns {[ref, bounds]}\n */\nexport function useMeasure() {\n  const ref = useRef()\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\n\n  useEffect(() => {\n    if (ref.current) {\n      const ro = new ResizeObserver(([entry]) => set(entry.contentRect))\n\n      ro.observe(ref.current)\n\n      return ro.disconnect\n    }\n  }, [ref.current])\n\n  return [ref, bounds]\n}\n\n/**\n * Hook to see if a media query matches the current environment.\n *\n * @function useMediaQuery\n * @param {string} query The CSS media query to evaluate.\n * @returns {boolean} Wheater the media query matches the current environment.\n */\nexport const useMediaQuery = query => {\n  const queryList = useMemo(() => window.matchMedia(query), [query])\n\n  const [matches, setMatches] = useState(queryList.matches)\n\n  useEffect(() => {\n    const handleMatchesChange = event => {\n      setMatches(event.matches)\n    }\n\n    queryList.addListener(handleMatchesChange)\n    return () => {\n      queryList.removeListener(handleMatchesChange)\n    }\n  }, [query])\n\n  return matches\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeProvider } from 'styled-components'\nimport { NIGHT, DAY } from './colors'\nimport breakpoints from './breakpoints'\nimport { useMediaQuery } from '../hooks'\n\nconst Theme = ({ children }) => {\n  const wantsLightTheme = useMediaQuery('(prefers-color-scheme: light)')\n\n  const theme = {\n    ...(wantsLightTheme ? DAY : NIGHT),\n    breakpoints,\n  }\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n\nTheme.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Theme\n","import { createGlobalStyle } from 'styled-components'\nimport styledNormalize from 'styled-normalize'\n\nexport default createGlobalStyle`\n  ${styledNormalize};\n\n  -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);\n\n  body {\n    background-color: ${({ theme }) => theme.background};\n    color: ${({ theme }) => theme.title};\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code, pre {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n\n  .katex-display {\n    &&& {\n    margin: 0;\n    }\n  }\n`\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst AppBar = styled.header`\n  border-bottom: 1px solid ${({ theme }) => theme.border.content};\n  width: 100%;\n  display: flex;\n  z-index: 1100;\n  box-sizing: border-box;\n  flex-shrink: 0;\n  flex-direction: column;\n`\n\nAppBar.propTypes = {\n  children: PropTypes.any,\n}\n\nexport default AppBar\n","import styled, { css } from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { transparentize as fade } from 'polished'\n\nconst CircleButton = styled.button`\n  color: ${({ theme }) => theme.title};\n  border-radius: 50%;\n  background: none;\n  -webkit-appearance: none;\n\n  ${({ variant, theme }) => {\n    if (variant === 'regular') {\n      return css`\n        background-color: ${fade(0.93, theme.title)};\n      `\n    } else if (variant === 'ghost') {\n      return css`\n        background-color: ${fade(1, theme.title)};\n      `\n    }\n  }};\n\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  padding: ${({ padding }) => padding}px;\n  transition: background-color 150ms ease-out;\n  box-sizing: border-box;\n\n  &:hover {\n    ${({ variant, theme }) => {\n      if (variant === 'regular') {\n        return css`\n          background-color: ${fade(0.9, theme.title)};\n        `\n      } else if (variant === 'ghost') {\n        return css`\n          background-color: ${fade(0.93, theme.title)};\n        `\n      }\n    }};\n  }\n\n  &:active {\n    transition: background-color 80ms ease-out;\n    background-color: ${({ theme }) => fade(0.95, theme.title)};\n  }\n`\n\nCircleButton.propTypes = {\n  onClick: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  size: PropTypes.number,\n  padding: PropTypes.number,\n  variant: PropTypes.oneOf(['regular', 'ghost']),\n}\n\nCircleButton.defaultProps = {\n  size: 34,\n  padding: 5,\n  variant: 'regular',\n}\n\nexport default CircleButton\n","import styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Base = styled.svg.attrs(({ size }) => ({\n  width: size,\n  height: size,\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 24 24',\n}))`\n  fill: currentColor;\n  color: ${({ checked, theme }) => (checked ? theme.primary : 'inherit')};\n  user-select: none;\n`\n\nBase.propTypes = {\n  size: PropTypes.number,\n}\n\nBase.defaultProps = {\n  size: 24,\n}\n\nexport default Base\n","import React from 'react'\nimport Base from '../Base'\n\nconst GitHub = props => (\n  <Base {...props}>\n    <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n  </Base>\n)\n\nexport default GitHub\n","import React from 'react'\nimport Base from '../Base'\n\nconst Menu = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n  </Base>\n)\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport AppBar from '../AppBar'\nimport CircleButton from '../CircleButton'\n// import Toolbar from '../Toolbar'\nimport { useMediaQuery } from '../../hooks'\nimport GitHub from '../../icons/GitHub'\nimport Menu from '../../icons/Menu'\nimport { up } from 'styled-breakpoints'\n\nconst Title = styled.h1`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  margin-left: 8px;\n  flex-grow: 1;\n\n  ${up('sm')} {\n    margin-left: 15px;\n  }\n\n  ${up('md')} {\n    margin-left: 20px;\n  }\n\n  ${up('lg')} {\n    margin-left: 30px;\n  }\n`\n\nconst Padding = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 64px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0px 20px;\n\n  ${up('sm')} {\n    padding: 0 50px;\n  }\n\n  ${up('md')} {\n    padding: 0 130px;\n  }\n`\n\nconst Width = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 1180px;\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Navigation = ({ handleMenuToggle }) => {\n  const isWideEnough = useMediaQuery('(min-width: 960px)')\n\n  return (\n    <AppBar>\n      <Padding>\n        <Width>\n          <CircleButton\n            onClick={handleMenuToggle}\n            title=\"Menu\"\n            size={48}\n            padding={12}\n            variant=\"ghost\"\n            css=\"margin-left: -12px;\"\n          >\n            <Menu size={null} />\n          </CircleButton>\n          <Title>\n            {isWideEnough\n              ? 'differentiable cartesian genetic programming'\n              : 'dcgp'}\n          </Title>\n          <CircleButton\n            as=\"a\"\n            title=\"GitHub\"\n            size={48}\n            padding={12}\n            variant=\"ghost\"\n            href=\"https://github.com/mikeheddes/dcgp.js\"\n          >\n            <GitHub size={null} />\n          </CircleButton>\n        </Width>\n      </Padding>\n    </AppBar>\n  )\n}\n\nNavigation.propTypes = {\n  handleMenuToggle: PropTypes.func.isRequired,\n}\n\nexport default Navigation\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Text = styled.p`\n  color: ${({ theme }) => theme.text.subtle};\n  text-align: center;\n  font-size: 0.75rem;\n  font-weight: 400;\n  line-height: 1.66;\n  margin: 0;\n`\n\nconst Footer = ({ className, children, ...restProps }) => (\n  <footer className={className} {...restProps}>\n    <Text>\n      Copyright © {new Date().getFullYear()} European Space Agency.{' '}\n      <span css=\"display: inline-block;\">All rights reserved.</span>\n    </Text>\n  </footer>\n)\n\nexport default styled(Footer)`\n  background-color: ${({ theme }) => theme.surface.regular};\n  height: 64px;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n","import PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { up } from 'styled-breakpoints'\n\nconst Page = styled.main`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1180px;\n  padding: 30px 20px;\n  display: grid;\n  grid-template-columns: [full-start] 1fr [full-end];\n  grid-template-rows: auto;\n  grid-gap: 20px;\n\n  ${up('sm')} {\n    grid-template-columns: [full-start] repeat(2, 1fr) [full-end];\n    padding: 50px;\n  }\n\n  ${up('md')} {\n    grid-gap: 30px;\n    padding-left: 130px;\n    padding-right: 130px;\n  }\n\n  ${up('lg')} {\n    grid-template-columns: [full-start] repeat(4, 1fr) [full-end];\n  }\n`\n\nPage.propType = {\n  childern: PropTypes.node.isRequired,\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Divider = styled.hr`\n  display: block;\n  height: auto;\n  margin: 0;\n  border-bottom: 0;\n  border-left: 0;\n  border-width: 2px;\n  border-top-style: solid;\n  border-right-style: solid;\n  border-color: ${({ theme }) => theme.border.divider};\n`\n\nexport default Divider\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Base from '../Base'\n\nconst Radio = props => (\n  <Base {...props}>\n    {props.checked ? (\n      <>\n        <path d=\"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </>\n    ) : (\n      <>\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </>\n    )}\n  </Base>\n)\n\nRadio.propTypes = {\n  checked: PropTypes.bool,\n}\n\nexport default Radio\n","export const capitalize = str => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport Radio from '../../../icons/Radio'\nimport { capitalize } from '../../../utils/string'\nimport { pointsPresetsById, changeDataset } from '../../actions'\nimport { datasetIdSelector } from '../../selectors'\nimport { useRedux } from '../../../hooks'\n\nconst presetIds = Object.keys(pointsPresetsById)\n\nconst Heading = styled.h2`\n  margin: 0;\n  margin-bottom: 20px;\n  font-weight: 600;\n`\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: 15px;\n  cursor: pointer;\n  line-height: 2.4;\n`\n\nconst Label = styled.span`\n  margin-left: 8px;\n`\n\nconst mapStateToProps = {\n  datasetId: datasetIdSelector,\n}\n\nconst Dataset = () => {\n  const { dispatch, datasetId } = useRedux(mapStateToProps)\n  const handleClick = useCallback(id => () => dispatch(changeDataset(id)), [\n    dispatch,\n  ])\n\n  return (\n    <div css=\"grid-column: full;\">\n      <Heading>Select data</Heading>\n      <List>\n        {presetIds.map(id => (\n          <Item key={id} onClick={handleClick(id)}>\n            <Radio checked={datasetId === id} />\n            <Label>{capitalize(pointsPresetsById[id].label)}</Label>\n          </Item>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nexport default Dataset\n","import styled from 'styled-components'\n\nconst GridContainer = styled.div`\n  background-color: ${({ theme }) => theme.surface.regular};\n  border-radius: 14px;\n  padding: 20px 20px 30px;\n  min-width: 0;\n`\n\nexport default GridContainer\n","import styled from 'styled-components'\n\nconst SubHeader = styled.h2`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  margin-bottom: 8px;\n`\n\nexport default SubHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GridContainer from '../../../components/GridContainer'\nimport Divider from '../../../components/Divider'\nimport SubHeader from '../../../components/SubHeader'\n\nconst SettingsContainer = ({ children, title }) => (\n  <GridContainer>\n    <SubHeader>{title}</SubHeader>\n    <Divider css=\"margin-bottom: 15px\" />\n    {children}\n  </GridContainer>\n)\n\nSettingsContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default SettingsContainer\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  margin-top: 15px;\n`\n\nexport const Row = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 8px;\n  color: ${({ theme }) => theme.text.regular};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n","import styled from 'styled-components'\nimport { Row as unStyledRow } from '../List'\nimport IconBase from '../../../icons/Base'\n\nexport const Row = styled(unStyledRow)`\n  cursor: pointer;\n\n  ${IconBase} {\n    margin-right: 8px;\n  }\n`\n\nexport const Icon = styled.span`\n  margin-right: 8px;\n`\n","import React, { useCallback } from 'react'\nimport { useRedux } from '../../../hooks'\nimport { setAlgorithm, algorithmsById } from '../../actions'\nimport { algorithmSelector } from '../../selectors'\nimport Container from '../Container'\nimport Radio from '../../../icons/Radio'\nimport List from '../List'\nimport { Row } from './style'\nimport { capitalize } from '../../../utils/string'\n\nconst algorithmIds = Object.keys(algorithmsById)\n\nconst mapStateToProps = {\n  algorithm: algorithmSelector,\n}\n\nconst Algorithm = () => {\n  const { dispatch, algorithm } = useRedux(mapStateToProps)\n\n  const handleChange = useCallback(id => () => dispatch(setAlgorithm(id)), [\n    dispatch,\n  ])\n\n  return (\n    <Container title=\"Algorithm\">\n      <List>\n        {algorithmIds.map(algorithmId => (\n          <Row key={algorithmId} onClick={handleChange(algorithmId)}>\n            <Radio checked={algorithm.id === algorithmId} />\n            {capitalize(algorithmsById[algorithmId].label)}\n          </Row>\n        ))}\n      </List>\n      <span css=\"font-size: 0.9em; opacity: 0.7; margin-top: 15px; display: block;\">\n        More algorithms comming soon.\n      </span>\n    </Container>\n  )\n}\n\nexport default Algorithm\n","import React from 'react'\nimport Base from '../Base'\n\nconst AddCircle = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n  </Base>\n)\n\nexport default AddCircle\n","import React from 'react'\nimport Base from '../Base'\n\nconst SubtractCircle = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\" />\n  </Base>\n)\n\nexport default SubtractCircle\n","import styled from 'styled-components'\nimport { transparentize as fade } from 'polished'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const Input = styled.input.attrs({ type: 'number' })`\n  -webkit-appearance: none;\n  margin: 0 4px;\n  color: ${({ theme }) => theme.title};\n  border: none;\n  background-image: none;\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n  outline: none;\n  font-size: inherit;\n  text-align: center;\n  width: 28px;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`\n\nexport const Button = styled.button`\n  color: ${({ theme }) => theme.primary};\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  transition: color 150ms ease;\n  display: flex;\n\n  &:active {\n    transition: color 80ms ease-out;\n    color: ${({ theme }) => fade(0.3, theme.primary)};\n  }\n\n  &[disabled] {\n    color: ${({ theme }) => theme.text.subtle};\n    cursor: default;\n\n    &:active {\n      color: ${({ theme }) => theme.text.subtle};\n    }\n  }\n`\n","import React, { useCallback } from 'react'\nimport AddCircle from '../../icons/AddCircle'\nimport SubtractCircle from '../../icons/SubtractCircle'\nimport { Wrapper, Input, Button } from './style'\n\nconst QuantityCounter = ({ value, onChange, min, max }) => {\n  const handleInputChange = useCallback(\n    event => {\n      const val = event.target.valueAsNumber\n\n      if (isNaN(val)) {\n        onChange(min)\n      } else if (val > max) {\n        onChange(max)\n      } else if (val < min) {\n        onChange(min)\n      } else {\n        onChange(val)\n      }\n    },\n    [onChange]\n  )\n\n  const handleDecrement = () => onChange(value - 1)\n  const handleIncrement = () => onChange(value + 1)\n\n  return (\n    <Wrapper>\n      <Button\n        onClick={handleDecrement}\n        title=\"Decrement\"\n        disabled={value <= min}\n      >\n        <SubtractCircle />\n      </Button>\n      <Input value={value} min={min} max={max} onChange={handleInputChange} />\n      <Button\n        onClick={handleIncrement}\n        title=\"Increment\"\n        disabled={value >= max}\n      >\n        <AddCircle />\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default QuantityCounter\n","import React, { useCallback } from 'react'\nimport { useRedux } from '../../../hooks'\nimport { setNetworkSetting, networkSettingsById } from '../../actions'\nimport { networkSelector } from '../../selectors'\nimport QuantityCounter from '../../../components/QuantityCounter'\nimport { capitalize } from '../../../utils/string'\nimport Container from '../Container'\nimport List, { Row } from '../List'\n\nconst networkSettingIds = Object.keys(networkSettingsById)\n\nconst mapStateToProps = {\n  network: networkSelector,\n}\n\nconst Network = () => {\n  const { dispatch, network } = useRedux(mapStateToProps)\n\n  const handleChange = useCallback(\n    settingId => newValue => dispatch(setNetworkSetting(settingId, newValue)),\n    [dispatch]\n  )\n\n  return (\n    <Container title=\"Network\">\n      <List>\n        {networkSettingIds.map(settingId => (\n          <Row key={settingId}>\n            {capitalize(networkSettingsById[settingId].label)}\n            <div css=\"flex-grow: 1;\" />\n            <QuantityCounter\n              value={network[settingId]}\n              onChange={handleChange(settingId)}\n              min={networkSettingsById[settingId].min}\n              max={networkSettingsById[settingId].max}\n            />\n          </Row>\n        ))}\n      </List>\n    </Container>\n  )\n}\n\nexport default Network\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Base from '../Base'\n\nconst CheckBox = props => (\n  <Base {...props}>\n    {props.checked ? (\n      <>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n      </>\n    ) : (\n      <>\n        <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      </>\n    )}\n  </Base>\n)\n\nCheckBox.propTypes = {\n  checked: PropTypes.bool,\n}\n\nexport default CheckBox\n","import styled from 'styled-components'\nimport { Row as unStyledRow } from '../List'\nimport IconBase from '../../../icons/Base'\n\nexport const Row = styled(unStyledRow)`\n  cursor: pointer;\n\n  ${IconBase} {\n    margin-right: 8px;\n  }\n`\n\nexport const Icon = styled.span`\n  margin-right: 8px;\n`\n","import React, { useCallback } from 'react'\nimport CheckBox from '../../../icons/CheckBox'\nimport { useRedux } from '../../../hooks'\nimport { capitalize } from '../../../utils/string'\nimport { toggleKernel, kernelNamesById } from '../../actions'\nimport { kernelsSelector } from '../../selectors'\nimport Container from '../Container'\nimport List from '../List'\nimport { Row } from './style'\n\nconst kernelIds = Object.keys(kernelNamesById)\n\nconst mapStateToProps = {\n  kernels: kernelsSelector,\n}\n\nconst Kernels = () => {\n  const { dispatch, kernels } = useRedux(mapStateToProps)\n\n  const handleChange = useCallback(\n    kernelId => () => dispatch(toggleKernel(kernelId)),\n    [dispatch]\n  )\n\n  return (\n    <Container title=\"Kernels\">\n      <List>\n        {kernelIds.map(kernelId => (\n          <Row\n            key={kernelId}\n            checked={kernels[kernelId]}\n            onClick={handleChange(kernelId)}\n          >\n            <CheckBox checked={kernels[kernelId]} />\n            {capitalize(kernelNamesById[kernelId])}\n          </Row>\n        ))}\n      </List>\n    </Container>\n  )\n}\n\nexport default Kernels\n","import React from 'react'\nimport Base from '../Base'\n\nconst Play = props => (\n  <Base {...props}>\n    <path d=\"M8 5v14l11-7z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </Base>\n)\n\nexport default Play\n","import React from 'react'\nimport Base from '../Base'\n\nconst Pause = props => (\n  <Base {...props}>\n    <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </Base>\n)\n\nexport default Pause\n","import React from 'react'\nimport CircleButton from '../../../components/CircleButton'\nimport Play from '../../../icons/Play'\nimport Pause from '../../../icons/Pause'\n\nconst PlayPauseButton = ({\n  isPlaying,\n  handlePause,\n  handlePlay,\n  ...restProps\n}) => (\n  <CircleButton\n    {...restProps}\n    onClick={isPlaying ? handlePause : handlePlay}\n    title={isPlaying ? 'Pause' : 'Play'}\n    size={58}\n    padding={10}\n  >\n    {isPlaying ? <Pause size={null} /> : <Play size={null} />}\n  </CircleButton>\n)\n\nexport default PlayPauseButton\n","import React from 'react'\nimport Base from '../Base'\n\nconst Reset = props => (\n  <Base {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\" />\n  </Base>\n)\n\nexport default Reset\n","import React from 'react'\nimport Base from '../Base'\n\nconst Next = props => (\n  <Base {...props}>\n    <path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </Base>\n)\n\nexport default Next\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useRedux } from '../../../hooks'\nimport {\n  startEvolution,\n  pauseEvolution,\n  resetEvolution,\n  stepEvolution,\n} from '../../actions'\nimport { evolutionStateSelector } from '../../selectors'\nimport PlayPauseButton from '../PlayPauseButton'\nimport CircleButton from '../../../components/CircleButton'\nimport Reset from '../../../icons/Reset'\nimport Next from '../../../icons/Next'\n\nconst ControlWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0 30px;\n\n  & button:nth-child(2) {\n    margin-left: 20px;\n    margin-right: 20px;\n  }\n`\n\nconst mapStateToProps = {\n  evolutionState: evolutionStateSelector,\n}\n\nconst Controls = () => {\n  const { dispatch, evolutionState } = useRedux(mapStateToProps)\n\n  const handleReset = useCallback(() => dispatch(resetEvolution()), [dispatch])\n  const handlePlay = useCallback(() => dispatch(startEvolution()), [dispatch])\n  const handlePause = useCallback(() => dispatch(pauseEvolution()), [dispatch])\n  const handleStep = useCallback(() => dispatch(stepEvolution()), [dispatch])\n\n  return (\n    <ControlWrapper>\n      <CircleButton onClick={handleReset} title=\"Reset\">\n        <Reset size={null} />\n      </CircleButton>\n      <PlayPauseButton\n        isPlaying={evolutionState === 'EVOLVING'}\n        handlePlay={handlePlay}\n        handlePause={handlePause}\n      />\n      <CircleButton onClick={handleStep} title=\"Next step\">\n        <Next size={null} />\n      </CircleButton>\n    </ControlWrapper>\n  )\n}\n\nexport default Controls\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRedux } from '../../../hooks'\nimport { currentStepSelector, lossSelector } from '../../selectors'\n\nconst significant4 = number => number.toPrecision(4)\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 20px 0 15px;\n`\n\nconst Row = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: 16px;\n  line-height: 1.7;\n`\n\nconst Heading = styled.b`\n  font-size: 18px;\n  margin-right: 0.25em;\n`\n\nconst mapStateToProps = {\n  currentStep: currentStepSelector,\n  loss: lossSelector,\n}\n\nconst Information = () => {\n  const { currentStep, loss } = useRedux(mapStateToProps)\n\n  return (\n    <List>\n      <Row>\n        <Heading>Loss:</Heading>\n        {loss && significant4(loss)}\n      </Row>\n      <Row>\n        <Heading>Step:</Heading>\n        {currentStep}\n      </Row>\n    </List>\n  )\n}\n\nexport default Information\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ReferenceLine,\n  ResponsiveContainer,\n} from 'recharts'\nimport Controls from '../Controls'\nimport GridContainer from '../../../components/GridContainer'\nimport Divider from '../../../components/Divider'\nimport { useRedux } from '../../../hooks'\nimport { stepsSelector, isDoneSelector } from '../../selectors'\nimport Information from '../Information'\n\nconst StyledLineChart = styled(LineChart)`\n  .recharts-curve {\n    stroke: ${({ theme }) => theme.title};\n    stroke-width: 2px;\n  }\n\n  .recharts-line-dots circle {\n    stroke: none;\n    fill: ${({ theme }) => theme.title};\n  }\n\n  .recharts-reference-line line {\n    stroke-width: 2px;\n    stroke: ${({ theme }) => theme.text.subtle};\n    stroke-dasharray: none;\n  }\n\n  .recharts-cartesian-grid-horizontal line {\n    stroke: ${({ theme }) => theme.border.divider};\n    stroke-dasharray: 3, 3;\n\n    &:nth-last-child(2) {\n      stroke-width: 2px;\n      stroke: rgba(0, 0, 0, 0);\n    }\n\n    &:nth-last-child(1) {\n      stroke-width: 2px;\n      stroke: ${({ theme }) => theme.text.subtle};\n      stroke-dasharray: none;\n    }\n  }\n`\n\nconst getData = (data, isDone) => {\n  if (isDone) {\n    return data.slice(0, data.length - 1)\n  } else {\n    return data\n  }\n}\n\nconst mapStateToProps = {\n  steps: stepsSelector,\n  isDone: isDoneSelector,\n}\n\nconst Evolve = () => {\n  const { steps, isDone } = useRedux(mapStateToProps)\n\n  // remove lest entry from steps when done\n  // because the log scale doesn't handle 0\n  const data = getData(steps, isDone)\n\n  return (\n    <GridContainer>\n      <Controls />\n      <Divider />\n      <Information />\n      <div css=\"margin: 0 5px; position: relative; padding-bottom: 65%;\">\n        <div css=\"width: 100%; height: 100%; position: absolute;\">\n          <ResponsiveContainer style={{ position: 'absolute' }}>\n            <StyledLineChart\n              data={data}\n              margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n            >\n              <XAxis\n                dataKey=\"step\"\n                type=\"number\"\n                domain={[0, dataMax => Math.max(dataMax, 1000)]}\n                hide\n              />\n              <YAxis\n                scale=\"log\"\n                domain={[dataMin => dataMin * 0.9, dataMax => dataMax * 1.1]}\n                hide\n              />\n              <CartesianGrid vertical={false} />\n              <ReferenceLine x={0} />\n              <Line\n                type=\"stepAfter\"\n                dataKey=\"loss\"\n                dot={false}\n                animationDuration={1000}\n              />\n            </StyledLineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </GridContainer>\n  )\n}\n\nexport default Evolve\n","import { useEffect } from 'react'\nimport { useRedux } from '../hooks'\nimport { addPredictionSubscriber, removePredictionSubscriber } from './actions'\nimport { predictionPointsSelector, predictionKeysSelector } from './selectors'\n\nconst mapStateToProps = {\n  predictions: predictionPointsSelector,\n  keys: predictionKeysSelector,\n}\n\nexport const usePredictions = () => {\n  const { dispatch, predictions, keys } = useRedux(mapStateToProps)\n\n  useEffect(() => {\n    dispatch(addPredictionSubscriber())\n    return () => {\n      dispatch(removePredictionSubscriber())\n    }\n  }, [dispatch])\n\n  return { predictions, keys }\n}\n","import styled from 'styled-components'\nimport { up } from 'styled-breakpoints'\nimport { LineChart } from 'recharts'\nimport unStyledGridContainer from '../../../components/GridContainer'\nimport { transparentize as fade } from 'polished'\n\nexport const StyledLineChart = styled(LineChart)`\n  .recharts-curve {\n    stroke-width: 1px;\n  }\n\n  .recharts-line-dots circle {\n    stroke: ${({ theme }) => theme.surface.regular};\n    stroke-width: 2px;\n  }\n\n  .recharts-cartesian-axis-line,\n  .recharts-cartesian-axis-tick-line {\n    stroke-width: 2px;\n    stroke: ${({ theme }) => theme.text.subtle};\n  }\n\n  .recharts-cartesian-grid line {\n    stroke: ${({ theme }) => theme.border.divider};\n    stroke-dasharray: 3, 3;\n  }\n\n  .recharts-legend-item:last-child {\n    margin-right: 0;\n  }\n\n  .recharts-legend-item-text {\n    font-size: 14px;\n    color: ${({ theme }) => theme.text.regular};\n  }\n`\n\nexport const GridContainer = styled(unStyledGridContainer)`\n  grid-column-end: span 1;\n\n  ${up('sm')} {\n    grid-column-end: span 2;\n  }\n`\n\nexport const CopyButton = styled.button`\n  color: ${({ theme }) => theme.primary};\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  transition: color 150ms ease-out;\n  box-sizing: border-box;\n  -webkit-appearance: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &:active {\n    transition: color 80ms ease-out;\n    color: ${({ theme }) => fade(0.3, theme.primary)};\n  }\n`\n","import React, { useContext, useMemo, useRef } from 'react'\nimport copy from 'copy-to-clipboard'\nimport { ThemeContext } from 'styled-components'\nimport 'katex/dist/katex.min.css'\nimport { BlockMath } from 'react-katex'\nimport {\n  Line,\n  XAxis,\n  YAxis,\n  Legend,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts'\nimport { useRedux } from '../../../hooks'\nimport { usePredictions } from '../../../dataset/hooks'\nimport Divider from '../../../components/Divider'\nimport {\n  inputKeysSelector,\n  outputKeysSelector,\n  pointsSelector,\n  equationSelector,\n  predictionEquationsSelector,\n} from '../../../dataset/selectors'\nimport { StyledLineChart, GridContainer, CopyButton } from './style'\n\nconst mapStateToProps = {\n  inputs: inputKeysSelector,\n  outputs: outputKeysSelector,\n  points: pointsSelector,\n  equation: equationSelector,\n  predictionEquations: predictionEquationsSelector,\n}\n\nconst Plot = () => {\n  const copyButton = useRef(null)\n\n  const { inputs, outputs, points, equation, predictionEquations } = useRedux(\n    mapStateToProps\n  )\n\n  const handleCopy = () => {\n    if (predictionEquations.length) {\n      copy(predictionEquations[0])\n    }\n  }\n\n  const { predictions, keys: predictionKeys } = usePredictions()\n\n  const data = useMemo(() => {\n    if (predictions.length) {\n      return points.map((point, i) => ({\n        ...point,\n        ...predictions[i],\n      }))\n    } else {\n      return points\n    }\n  }, [predictions, points])\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <GridContainer>\n      <div css=\"margin: 0 5px; position: relative; padding-bottom: 65%;\">\n        <div css=\"width: 100%; height: 100%; position: absolute;\">\n          <ResponsiveContainer>\n            <StyledLineChart\n              data={data}\n              margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n            >\n              <CartesianGrid />\n              <XAxis dataKey={inputs[0]} type=\"number\" />\n              <YAxis width={45} />\n              <Legend verticalAlign=\"top\" height={36} />\n              <Line\n                name=\"labels\"\n                type=\"monotone\"\n                dataKey={outputs[0]}\n                dot={{ fill: theme.primary, r: 4 }}\n                stroke={theme.primary}\n                animationDuration={500}\n              />\n              <Line\n                name=\"predictions\"\n                dataKey={predictionKeys[0]}\n                type=\"monotone\"\n                dot={{ fill: theme.secundary, r: 4 }}\n                stroke={theme.secundary}\n                animationDuration={500}\n              />\n            </StyledLineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n      <Divider css=\"margin: 15px 0;\" />\n      {equation && (\n        <>\n          <div css=\"display: flex; margin-bottom: 15px;\">\n            <span css=\"flex-grow: 1;\">Label equation:</span>\n          </div>\n          <BlockMath>{equation}</BlockMath>\n        </>\n      )}\n      {predictionEquations.length > 0 && (\n        <>\n          <div css=\"display: flex; margin: 30px 0 15px;\">\n            <span css=\"flex-grow: 1;\">Prediction equation:</span>\n            <CopyButton ref={copyButton} onClick={handleCopy}>\n              Copy LaTeX\n            </CopyButton>\n          </div>\n          <div css=\"overflow-x: auto; overflow-y: hidden;\">\n            <BlockMath>{predictionEquations[0]}</BlockMath>\n          </div>\n        </>\n      )}\n    </GridContainer>\n  )\n}\n\nexport default Plot\n","import React from 'react'\nimport GlobalStyle from '../../styles/GlobalStyle'\nimport Navigation from '../Navigation'\nimport Footer from '../Footer'\nimport Page from '../Page'\nimport Divider from '../Divider'\nimport { Dataset } from '../../dataset'\nimport { Kernels, Network, Algorithm } from '../../settings'\nimport { Evolution } from '../../evolution'\nimport { Plot } from '../../visualisation'\n\nconst Body = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Navigation handleMenuToggle={console.log} />\n      <Page>\n        <Dataset />\n        <div css=\"grid-column: full;\">\n          <Divider />\n        </div>\n        <Evolution />\n        <Kernels />\n        <Network />\n        <Algorithm />\n        <Plot />\n      </Page>\n      <Footer />\n    </>\n  )\n}\n\nexport default Body\n","import React from 'react'\nimport Theme from '../../styles/Theme'\nimport Body from '../Body'\n\nconst App = () => (\n  <Theme>\n    <Body />\n  </Theme>\n)\n\nexport default App\n","/* eslint-env serviceworker */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}